### 文档_ https://github.com/hooke007/MPV_lazy/blob/main/portable_config/input.conf
### 文档_ https://github.com/hooke007/MPV_lazy/blob/main/portable_config/input_uosc.conf


#                  script-binding uosc/open-file                         #! 加载 > ※ 文件浏览器
#                  script-binding uosc/load-subtitles                    #! 加载 > ※ 导入 字幕轨
 Ctrl+v            script-binding paste-url                              #! 加载 > ※ 粘贴URL播放

#                  script-binding uosc/playlist                          #! 导航 > ※ 播放列表
#                  script-binding uosc/editions                          #! 导航 > ※ 版本列表
#                  script-binding uosc/chapters                          #! 导航 > ※ 章节列表
#                  script-binding uosc/video                             #! 导航 > ※ 视频轨列表
#                  script-binding uosc/audio                             #! 导航 > ※ 音频轨列表
#                  script-binding uosc/subtitles                         #! 导航 > ※ 字幕轨列表
#                  playlist-shuffle                                      #! 导航 > 播放列表乱序重排

 ,                 frame-back-step                                       #! 播放 > 上一帧
 .                 frame-step                                            #! 播放 > 下一帧
 l                 ab-loop                                               #! 播放 > 设置/清除 AB循环点
 [                 no-osd cycle-values speed 2 1.5 1.2 1 ; script-message-to uosc flash-elements speed   #! 播放 > 切换 速度 -
 ]                 no-osd cycle-values speed 1 1.2 1.5 2 ; script-message-to uosc flash-elements speed   #! 播放 > 切换 速度 +
 {                 no-osd add speed -0.1 ; script-message-to uosc flash-elements speed   #! 播放 > 切换     速度 -0.1
 }                 no-osd add speed  0.1 ; script-message-to uosc flash-elements speed   #! 播放 > 切换 速度 +0.1
 BS                no-osd set speed 1 ; script-message-to uosc flash-elements speed     #! 播放 > 重置 速度
 -                 no-osd add volume -1 ; script-message-to uosc flash-elements volume   #! 播放 > 音量 -
 =                 no-osd add volume  1 ; script-message-to uosc flash-elements volume   #! 播放 > 音量 +
#                  ignore                                                #! 播放 > ---
 c                 add audio-delay -0.1                                  #! 播放 > 音频预载 100ms
 v                 add audio-delay  0.1                                  #! 播放 > 音频延迟 100ms
 z                 add sub-delay -0.1                                    #! 播放 > 字幕预载 100ms
 x                 add sub-delay +0.1                                    #! 播放 > 字幕延迟 100ms
#                  ignore                                                #! 播放 > ---
 Shift+BS          set audio-delay 0 ; set sub-delay 0                   #! 播放 > 重置 音频与字幕同步

#                  ignore                                                #! ---
 ~                 vf clr ""                                             #! VF 滤镜 > 清空所有滤镜
#                                                                        #! VF 滤镜 > ---

### ====================== VF滤镜菜单 ======================

## 补帧系列（增加视频帧数，使画面更流畅）
 !                 vf set vapoursynth="~~/vs/MEMC_MVT_LQ.vpy"            #! VF 滤镜 > 补帧 > MVTools 快速版（低质量但占用资源少）
 @                 vf set vapoursynth="~~/vs/MEMC_MVT_STD.vpy"           #! VF 滤镜 > 补帧 > MVTools 标准版（平衡质量与性能）
 SHARP             vf set vapoursynth="~~/vs/MEMC_RIFE_STD.vpy"          #! VF 滤镜 > 补帧 > RIFE 标准版（AI补帧，质量较好）
 $                 vf set vapoursynth="~~/vs/MEMC_RIFE_NV.vpy"           #! VF 滤镜 > 补帧 > RIFE RTX加速版（需要NVIDIA显卡）
 %                 vf set vapoursynth="~~/vs/MEMC_SVP_PRO.vpy"           #! VF 滤镜 > 补帧 > SVP 专业版（高质量补帧，需要强力CPU）
 ^                 vf set vapoursynth="~~/vs/MEMC_SVP_LQ.vpy"            #! VF 滤镜 > 补帧 > SVP 快速版（适合一般电脑使用）

## 超分辨率系列（提高视频清晰度，类似于AI放大）
 &                 vf set vapoursynth="~~/vs/SR_ESRGAN_DML.vpy"          #! VF 滤镜 > 超分辨率 > ESRGAN DX12加速（支持AMD/NVIDIA显卡）
 *                 vf set vapoursynth="~~/vs/SR_ESRGAN_NV.vpy"           #! VF 滤镜 > 超分辨率 > ESRGAN RTX加速（仅NVIDIA显卡，效果最好）
 (                 vf set vapoursynth="~~/vs/SR_WAIFU_DML.vpy"           #! VF 滤镜 > 超分辨率 > WAIFU2x DX12加速（适合动漫，通用显卡）
 )                 vf set vapoursynth="~~/vs/SR_WAIFU_NV.vpy"            #! VF 滤镜 > 超分辨率 > WAIFU2x RTX加速（适合动漫，NVIDIA专用）
 _                 vf set vapoursynth="~~/vs/SR_ARTCNN_NV.vpy"           #! VF 滤镜 > 超分辨率 > ArtCNN RTX加速（艺术风格增强，NVIDIA专用）

## 降噪系列（减少视频噪点，使画面更干净）
#                  vf set vapoursynth="~~/vs/NR_BM3D_NV.vpy"             #! VF 滤镜 > 降噪 > BM3D RTX加速（强力降噪，需NVIDIA显卡）
#                  vf set vapoursynth="~~/vs/NR_CCD_STD.vpy"             #! VF 滤镜 > 降噪 > CCD 标准版（温和降噪，适合大多数视频）

## 其他处理（特殊视频处理功能）
#                  vf set vapoursynth="~~/vs/ETC_DEINT_EX.vpy"           #! VF 滤镜 > 其他 > 去隔行（修复老旧视频的隔行扫描问题）
#                  vf set vapoursynth="~~/vs/ETC_IVTC_STD.vpy"           #! VF 滤镜 > 其他 > 去反交错（修复电影转电视的帧率问题）
#                  vf set vapoursynth="~~/vs/ETC_UAI_DML.vpy"            #! VF 滤镜 > 其他 > UAI DX12加速（通用AI增强，支持多种显卡）
#                  vf set vapoursynth="~~/vs/ETC_UAI_NV_TRT.vpy"         #! VF 滤镜 > 其他 > UAI RTX加速（通用AI增强，NVIDIA专用）
#                  vf set vapoursynth="~~/vs/ETC_UVR_MAD.vpy"            #! VF 滤镜 > 其他 > UVR 标准版（提取和增强视频中的声音）

 Ctrl+`            change-list glsl-shaders clr ""                                              #! 着色器 > 清空所有着色器
#                  ignore                                                                       #! 着色器 > ---
### ====================== 着色器菜单（无快捷键） ======================

## Anime4K系列（专为动漫优化的画质增强）
#                  change-list glsl-shaders toggle "~~/shaders/Anime4K_Denoise_Bilateral_Mode.glsl" #! 着色器 > A4K > 降噪 Mode（去除噪点，保留细节）
#                  change-list glsl-shaders toggle "~~/shaders/Anime4K_Denoise_Bilateral_Median.glsl" #! 着色器 > A4K > 降噪 Median（中等强度降噪）
#                  change-list glsl-shaders toggle "~~/shaders/Anime4K_Denoise_Bilateral_Mean.glsl" #! 着色器 > A4K > 降噪 Mean（均值降噪，较柔和）
#                  change-list glsl-shaders toggle "~~/shaders/Anime4K_Darken_VeryFast.glsl"    #! 着色器 > A4K > 暗化 极速（加深线条，速度最快）
#                  change-list glsl-shaders toggle "~~/shaders/Anime4K_Darken_Fast.glsl"        #! 着色器 > A4K > 暗化 快速（加深线条，速度较快）
#                  change-list glsl-shaders toggle "~~/shaders/Anime4K_Darken_HQ.glsl"          #! 着色器 > A4K > 暗化 高质（加深线条，质量最佳）
#                  change-list glsl-shaders toggle "~~/shaders/Anime4K_Thin_VeryFast.glsl"      #! 着色器 > A4K > 细化 极速（细化线条，速度最快）
#                  change-list glsl-shaders toggle "~~/shaders/Anime4K_Thin_Fast.glsl"          #! 着色器 > A4K > 细化 快速（细化线条，速度较快）
#                  change-list glsl-shaders toggle "~~/shaders/Anime4K_Thin_HQ.glsl"            #! 着色器 > A4K > 细化 高质（细化线条，质量最佳）
#                  change-list glsl-shaders toggle "~~/shaders/Anime4K_Deblur_DoG.glsl"         #! 着色器 > A4K > 去模糊 DoG（使用差分高斯算法锐化）
#                  change-list glsl-shaders toggle "~~/shaders/Anime4K_Deblur_Original.glsl"    #! 着色器 > A4K > 去模糊 原版（原始算法锐化）
#                  change-list glsl-shaders toggle "~~/shaders/Anime4K_Restore_CNN_L.glsl"      #! 着色器 > A4K > 重建（使用AI恢复细节）
#                  change-list glsl-shaders toggle "~~/shaders/Anime4K_Upscale_GAN_x2_M.glsl"   #! 着色器 > A4K > 放大（2倍放大，适合低分辨率视频）

## ACNet系列（动漫线条增强网络）
#                  change-list glsl-shaders toggle "~~/shaders/ACNet.glsl"                       #! 着色器 > ACNet > 标准（增强动漫线条清晰度）
#                  change-list glsl-shaders toggle "~~/shaders/ACNet_HDN_L1.glsl"                #! 着色器 > ACNet > HDN L1（轻度降噪增强版）
#                  change-list glsl-shaders toggle "~~/shaders/ACNet_HDN_L2.glsl"                #! 着色器 > ACNet > HDN L2（中度降噪增强版）
#                  change-list glsl-shaders toggle "~~/shaders/ACNet_HDN_L3.glsl"                #! 着色器 > ACNet > HDN L3（强度降噪增强版）

## AMD系列（AMD显卡优化技术）
#                  change-list glsl-shaders toggle "~~/shaders/AMD_CAS_RT.glsl"                  #! 着色器 > AMD > CAS 标准（对比度自适应锐化）
#                  change-list glsl-shaders toggle "~~/shaders/AMD_CAS_rgb_RT.glsl"              #! 着色器 > AMD > CAS RGB（RGB模式锐化）
#                  change-list glsl-shaders toggle "~~/shaders/AMD_CAS_scaled_RT.glsl"           #! 着色器 > AMD > CAS 缩放（带缩放的锐化）
#                  change-list glsl-shaders toggle "~~/shaders/AMD_CAS_scaled_rgb_RT.glsl"       #! 着色器 > AMD > CAS RGB缩放（RGB模式带缩放）
#                  change-list glsl-shaders toggle "~~/shaders/AMD_FSR_RT.glsl"                  #! 着色器 > AMD > FSR 标准（超分辨率技术）
#                  change-list glsl-shaders toggle "~~/shaders/AMD_FSR_rgb_RT.glsl"              #! 着色器 > AMD > FSR RGB（RGB模式超分辨率）
#                  change-list glsl-shaders toggle "~~/shaders/AMD_FSR_RCAS_rgb_RT.glsl"         #! 着色器 > AMD > FSR RCAS RGB（带锐化的RGB超分辨率）
#                  change-list glsl-shaders toggle "~~/shaders/AMD_FSR_EASU_rgb_RT.glsl"        #! 着色器 > AMD > FSR EASU RGB（边缘感知放大RGB模式）

## LUMA增强（亮度通道增强，提高清晰度）
#                  change-list glsl-shaders toggle "~~/shaders/Ani4Kv2_ArtCNN_C4F32_i2.glsl"    #! 着色器 > LUMA > Ani4Kv2（动漫专用亮度增强）
#                  change-list glsl-shaders toggle "~~/shaders/AniSD_ArtCNN_C4F32_i4.glsl"      #! 着色器 > LUMA > AniSD（标清动漫亮度增强）
#                  change-list glsl-shaders toggle "~~/shaders/FSRCNNX_x2_16_0_4_1.glsl"        #! 着色器 > LUMA > FSRCNNX（快速超分辨率CNN）
#                  change-list glsl-shaders toggle "~~/shaders/nnedi3_nns128_win8x4.glsl"       #! 着色器 > LUMA > NNEDI3（神经网络边缘插值）

## CHROMA增强（色度通道增强，改善色彩）
#                  change-list glsl-shaders toggle "~~/shaders/CfL_Prediction_RT.glsl"          #! 着色器 > CHROMA > CFL RT（从亮度预测色度，改善色彩）

## 锐化（增强画面细节和边缘）
#                  change-list glsl-shaders toggle "~~/shaders/adaptive_sharpen_RT.glsl"        #! 着色器 > 锐化 > 自适应锐化 RT（智能锐化，避免过度）

## CuNNy系列（基于神经网络的超分辨率）
#                  change-list glsl-shaders toggle "~~/shaders/CuNNy_2x12_SOFT.glsl"            #! 着色器 > CuNNy > 2x12 SOFT（2倍放大，柔和效果）
#                  change-list glsl-shaders toggle "~~/shaders/CuNNy_2x12_SOFT_vk.glsl"         #! 着色器 > CuNNy > 2x12 SOFT VK（Vulkan加速版）
#                  change-list glsl-shaders toggle "~~/shaders/CuNNy_2x12_DS.glsl"              #! 着色器 > CuNNy > 2x12 DS（2倍放大，去锯齿版）
#                  change-list glsl-shaders toggle "~~/shaders/CuNNy_3x12_SOFT_vk.glsl"         #! 着色器 > CuNNy > 3x12 SOFT VK（3倍放大，Vulkan加速）
#                  change-list glsl-shaders toggle "~~/shaders/CuNNy_4x12_SOFT_vk.glsl"         #! 着色器 > CuNNy > 4x12 SOFT VK（4倍放大，12层网络）
#                  change-list glsl-shaders toggle "~~/shaders/CuNNy_4x16_SOFT_vk.glsl"         #! 着色器 > CuNNy > 4x16 SOFT VK（4倍放大，16层网络）
#                  change-list glsl-shaders toggle "~~/shaders/CuNNy_4x16_DS_vk.glsl"           #! 着色器 > CuNNy > 4x16 DS VK（4倍放大，去锯齿版）
#                  change-list glsl-shaders toggle "~~/shaders/CuNNy_4x24_SOFT_vk.glsl"         #! 着色器 > CuNNy > 4x24 SOFT VK（4倍放大，24层网络）
#                  change-list glsl-shaders toggle "~~/shaders/CuNNy_4x24_DS_vk.glsl"           #! 着色器 > CuNNy > 4x24 DS VK（4倍放大，去锯齿版）
#                  change-list glsl-shaders toggle "~~/shaders/CuNNy_4x32_SOFT_vk.glsl"         #! 着色器 > CuNNy > 4x32 SOFT VK（4倍放大，32层网络）
#                  change-list glsl-shaders toggle "~~/shaders/CuNNy_faster_DS.glsl"            #! 着色器 > CuNNy > faster DS（快速版，去锯齿）

## RAVU系列（快速精确的放大算法）
#                  change-list glsl-shaders toggle "~~/shaders/ravu_r2_yuv.glsl"                #! 着色器 > RAVU > r2 YUV（半径2算法，YUV模式）
#                  change-list glsl-shaders toggle "~~/shaders/ravu_r3_yuv.glsl"                #! 着色器 > RAVU > r3 YUV（半径3算法，更精确）
#                  change-list glsl-shaders toggle "~~/shaders/ravu_r4_yuv.glsl"                #! 着色器 > RAVU > r4 YUV（半径4算法，最精确）
#                  change-list glsl-shaders toggle "~~/shaders/ravu_3x_r2_yuv.glsl"             #! 着色器 > RAVU > 3x r2 YUV（3倍放大，半径2）
#                  change-list glsl-shaders toggle "~~/shaders/ravu_3x_r3_yuv.glsl"             #! 着色器 > RAVU > 3x r3 YUV（3倍放大，半径3）
#                  change-list glsl-shaders toggle "~~/shaders/ravu_3x_r4_yuv.glsl"             #! 着色器 > RAVU > 3x r4 YUV（3倍放大，半径4）

## AI放大系列（基于AI的图像放大）
#                  change-list glsl-shaders toggle "~~/shaders/AiUpscale_Fast_2x_Photo.glsl"    #! 着色器 > AI放大 > 快速 2x 照片（适合真实照片）
#                  change-list glsl-shaders toggle "~~/shaders/AiUpscale_Fast_3x_Photo.glsl"    #! 着色器 > AI放大 > 快速 3x 照片（3倍放大照片）
#                  change-list glsl-shaders toggle "~~/shaders/AiUpscale_Fast_4x_Photo.glsl"    #! 着色器 > AI放大 > 快速 4x 照片（4倍放大照片）
#                  change-list glsl-shaders toggle "~~/shaders/AiUpscale_Fast_2x_LineArt.glsl"  #! 着色器 > AI放大 > 快速 2x 线稿（适合动漫、漫画）
#                  change-list glsl-shaders toggle "~~/shaders/AiUpscale_Fast_3x_LineArt.glsl"  #! 着色器 > AI放大 > 快速 3x 线稿（3倍放大线稿）
#                  change-list glsl-shaders toggle "~~/shaders/AiUpscale_Fast_4x_LineArt.glsl"  #! 着色器 > AI放大 > 快速 4x 线稿（4倍放大线稿）
#                  change-list glsl-shaders toggle "~~/shaders/AiUpscale_Medium_2x_Photo.glsl"  #! 着色器 > AI放大 > 中质 2x 照片（平衡速度与质量）
#                  change-list glsl-shaders toggle "~~/shaders/AiUpscale_Medium_3x_Photo.glsl"  #! 着色器 > AI放大 > 中质 3x 照片（3倍放大照片）
#                  change-list glsl-shaders toggle "~~/shaders/AiUpscale_Medium_4x_Photo.glsl"  #! 着色器 > AI放大 > 中质 4x 照片（4倍放大照片）
#                  change-list glsl-shaders toggle "~~/shaders/AiUpscale_Medium_2x_LineArt.glsl" #! 着色器 > AI放大 > 中质 2x 线稿（平衡速度与质量）
#                  change-list glsl-shaders toggle "~~/shaders/AiUpscale_Medium_3x_LineArt.glsl" #! 着色器 > AI放大 > 中质 3x 线稿（3倍放大线稿）
#                  change-list glsl-shaders toggle "~~/shaders/AiUpscale_Medium_4x_LineArt.glsl" #! 着色器 > AI放大 > 中质 4x 线稿（4倍放大线稿）
#                  change-list glsl-shaders toggle "~~/shaders/AiUpscale_HQ_2x_Photo.glsl"      #! 着色器 > AI放大 > 高质 2x 照片（最佳质量，较慢）
#                  change-list glsl-shaders toggle "~~/shaders/AiUpscale_HQ_3x_Photo.glsl"      #! 着色器 > AI放大 > 高质 3x 照片（3倍放大照片）
#                  change-list glsl-shaders toggle "~~/shaders/AiUpscale_HQ_4x_Photo.glsl"      #! 着色器 > AI放大 > 高质 4x 照片（4倍放大照片）
#                  change-list glsl-shaders toggle "~~/shaders/AiUpscale_HQ_2x_LineArt.glsl"    #! 着色器 > AI放大 > 高质 2x 线稿（最佳质量，较慢）
#                  change-list glsl-shaders toggle "~~/shaders/AiUpscale_HQ_3x_LineArt.glsl"    #! 着色器 > AI放大 > 高质 3x 线稿（3倍放大线稿）
#                  change-list glsl-shaders toggle "~~/shaders/AiUpscale_HQ_4x_LineArt.glsl"    #! 着色器 > AI放大 > 高质 4x 线稿（4倍放大线稿）

#                  ignore                                                #! ---
 Ctrl+s            script-binding uosc/shot                              #! ※ 截屏

#                  cycle-values hwdec "auto" "auto-copy" "no"            #! 视频 > 切换 解码模式
#                  cycle deband                                          #! 视频 > 切换 去色带状态
#                  cycle deinterlace                                     #! 视频 > 切换 去隔行状态
#                  cycle icc-profile-auto                                #! 视频 > 切换 自动校色
#                  cycle correct-pts                                     #! 视频 > 切换 时间码解析模式
 1                 add contrast -1                                       #! 视频 > 均衡器 > 对比度 -
 2                 add contrast  1                                       #! 视频 > 均衡器 > 对比度 +
 3                 add brightness -1                                     #! 视频 > 均衡器 > 亮度/明度 -
 4                 add brightness  1                                     #! 视频 > 均衡器 > 亮度/明度 +
 5                 add gamma -1                                          #! 视频 > 均衡器 > 伽马 -
 6                 add gamma  1                                          #! 视频 > 均衡器 > 伽马 +
 7                 add saturation -1                                     #! 视频 > 均衡器 > 饱和度/纯度 -
 8                 add saturation  1                                     #! 视频 > 均衡器 > 饱和度/纯度 +
 9                 add hue -1                                            #! 视频 > 均衡器 > 色相 -
 0                 add hue  1                                            #! 视频 > 均衡器 > 色相 +
#                  ignore                                                #! 视频 > 均衡器 > ---
 Ctrl+BS           set contrast 0 ; set brightness 0 ; set gamma 0 ; set saturation 0 ; set hue 0 #! 视频 > 均衡器 > 重置 全部

 Ctrl+i            script-binding uosc/keybinds                          #! 工具 > ※ 按键绑定列表
 tab                 script-binding display-stats-toggle                   #! 工具 > 常驻显示统计信息
 `                 script-binding console/enable                         #! 工具 > 显示控制台
 Ctrl+r            script-message-to save_global_props clean_data        #! 工具 > 清除已记录的属性值
b                  cycle border                                          #! 工具 > 切换 窗口边框
t                  cycle ontop                                           #! 工具 > 切换 窗口置顶
#                  script-binding uosc/audio-device                      #! 工具 > ※ 音频输出设备列表
#                  script-binding uosc/stream-quality                    #! 工具 > ※ 流式传输品质
#                  script-binding uosc/show-in-directory                 #! 工具 > ※ 打开 当前文件所在路径
#                  script-binding uosc/open-config-directory             #! 工具 > ※ 打开 设置目录

#                  ignore                                                #! ---
#                  stop                                                  #! 停止
 Ctrl+w            quit                                                  #! 退出mpv


### ====================== 不映射菜单 ======================

 POWER             quit
 PLAY              set pause no
 PAUSE             set pause yes
 PLAYPAUSE         cycle pause
 STOP              stop
 REWIND            seek -30 ; script-message-to uosc flash-elements timeline
 FORWARD           seek  30 ; script-message-to uosc flash-elements timeline
 PREV              script-binding uosc/prev
 NEXT              script-binding uosc/next

 MBTN_BACK         script-binding uosc/prev
 MBTN_FORWARD      script-binding uosc/next
 MBTN_LEFT         ignore
 MBTN_LEFT_DBL     cycle fullscreen
 MBTN_MID          script-binding uosc/menu
 MBTN_RIGHT        script-binding uosc/menu
 Ctrl+MBTN_RIGHT   context-menu
 MBTN_RIGHT_DBL    ignore

#WHEEL_DOWN        no-osd add volume -1 ; script-message-to uosc flash-elements volume
#WHEEL_UP          no-osd add volume  1 ; script-message-to uosc flash-elements volume

 ESC               set fullscreen no
 ENTER             set fullscreen yes
 f                 cycle fullscreen
 SPACE             cycle pause
 UP                set pause yes ; seek -1 exact ; script-message-to uosc flash-elements timeline
 DOWN              set pause yes ; seek  1 exact ; script-message-to uosc flash-elements timeline
 LEFT              seek -5 ; script-message-to uosc flash-elements timeline
 RIGHT             seek  5 ; script-message-to uosc flash-elements timeline
 Ctrl+UP           script-binding uosc/prev
 Ctrl+DOWN         script-binding uosc/next
