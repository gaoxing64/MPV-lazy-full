### 文档_ https://github.com/hooke007/MPV_lazy/blob/main/portable_config/input.conf
### 文档_ https://github.com/hooke007/MPV_lazy/blob/main/portable_config/input_uosc.conf


#                  script-binding uosc/open-file                         #! 加载 > ※ 文件浏览器
#                  script-binding uosc/load-subtitles                    #! 加载 > ※ 导入 字幕轨
 Ctrl+v            script-binding uosc/paste                             #! 加载 > ※ 粘贴URL播放

#                  script-binding uosc/playlist                          #! 导航 > ※ 播放列表
#                  script-binding uosc/editions                          #! 导航 > ※ 版本列表
#                  script-binding uosc/chapters                          #! 导航 > ※ 章节列表
#                  script-binding uosc/video                             #! 导航 > ※ 视频轨列表
#                  script-binding uosc/audio                             #! 导航 > ※ 音频轨列表
#                  script-binding uosc/subtitles                         #! 导航 > ※ 字幕轨列表
#                  playlist-shuffle                                      #! 导航 > 播放列表乱序重排
Ctrl+u             script-binding thumbfast/thumb_rerun                  #! 导航 > 重启缩略图获取
u                  script-binding thumbfast/thumb_toggle                 #! 导航 > 开关缩略图预览

 ,                 frame-back-step                                                                                  #! 播放 > 上一帧
 .                 frame-step                                                                                       #! 播放 > 下一帧
 l                 ab-loop                                                                                          #! 播放 > 设置/清除 AB循环点
 [                 no-osd cycle-values speed 2 1.5 1.2 1 ; script-message-to uosc flash-elements speed              #! 播放 > 切换 速度 -
 ]                 no-osd cycle-values speed 1 1.2 1.5 2 ; script-message-to uosc flash-elements speed              #! 播放 > 切换 速度 +
 {                 no-osd add speed -0.1 ; script-message-to uosc flash-elements speed                              #! 播放 > 切换 速度 -0.1
 }                 no-osd add speed  0.1 ; script-message-to uosc flash-elements speed                              #! 播放 > 切换 速度 +0.1
 BS                no-osd set speed 1 ; script-message-to uosc flash-elements speed                                 #! 播放 > 重置 速度
 -                 no-osd add volume -1 ; script-message-to uosc flash-elements volume                              #! 播放 > 音量 -
 =                 no-osd add volume  1 ; script-message-to uosc flash-elements volume                              #! 播放 > 音量 +
 m                 cycle mute ; script-message-to uosc flash-elements mute                                          #! 播放 > 静音切换
#                  ignore                                                                                           #! 播放 > ---
 c                 add audio-delay -0.1                                                                             #! 播放 > 音频预载 100ms
 v                 add audio-delay  0.1                                                                             #! 播放 > 音频延迟 100ms
 z                 add sub-delay -0.1                                                                               #! 播放 > 字幕预载 100ms
 x                 add sub-delay +0.1                                                                               #! 播放 > 字幕延迟 100ms
#                  ignore                                                                                           #! 播放 > ---
 Shift+BS          set audio-delay 0 ; set sub-delay 0                                                              #! 播放 > 重置 音频与字幕同步

#                  ignore                                                #! ---
 ~                 vf clr ""                                             #! VF 滤镜 > 清空所有滤镜
#                                                                        #! VF 滤镜 > ---

### ====================== VF滤镜菜单 ======================

## 补帧系列（增加视频帧数，使画面更流畅）
 !                 vf set vapoursynth="~~/vs/MEMC_MVT_LQ.vpy"            #! VF 滤镜 > 补帧 > MVTools 快速版（低质量但占用资源少）
 @                 vf set vapoursynth="~~/vs/MEMC_MVT_STD.vpy"           #! VF 滤镜 > 补帧 > MVTools 标准版（平衡质量与性能）
 SHARP             vf set vapoursynth="~~/vs/MEMC_RIFE_STD.vpy"          #! VF 滤镜 > 补帧 > RIFE 标准版（AI补帧，质量较好）
 $                 vf set vapoursynth="~~/vs/MEMC_RIFE_NV.vpy"           #! VF 滤镜 > 补帧 > RIFE RTX加速版（需要NVIDIA显卡）
 %                 vf set vapoursynth="~~/vs/MEMC_SVP_PRO.vpy"           #! VF 滤镜 > 补帧 > SVP 专业版（高质量补帧，需要强力CPU）
 ^                 vf set vapoursynth="~~/vs/MEMC_SVP_LQ.vpy"            #! VF 滤镜 > 补帧 > SVP 快速版（适合一般电脑使用）

## 超分辨率系列（提高视频清晰度，类似于AI放大）
 &                 vf set vapoursynth="~~/vs/SR_ESRGAN_DML.vpy"          #! VF 滤镜 > 超分辨率 > ESRGAN DX12加速（支持AMD/NVIDIA显卡）
 *                 vf set vapoursynth="~~/vs/SR_ESRGAN_NV.vpy"           #! VF 滤镜 > 超分辨率 > ESRGAN RTX加速（仅NVIDIA显卡，效果最好）
 (                 vf set vapoursynth="~~/vs/SR_WAIFU_DML.vpy"           #! VF 滤镜 > 超分辨率 > WAIFU2x DX12加速（适合动漫，通用显卡）
 )                 vf set vapoursynth="~~/vs/SR_WAIFU_NV.vpy"            #! VF 滤镜 > 超分辨率 > WAIFU2x RTX加速（适合动漫，NVIDIA专用）
 _                 vf set vapoursynth="~~/vs/SR_ARTCNN_NV.vpy"           #! VF 滤镜 > 超分辨率 > ArtCNN RTX加速（艺术风格增强，NVIDIA专用）

## 降噪系列（减少视频噪点，使画面更干净）
#                  vf set vapoursynth="~~/vs/NR_BM3D_NV.vpy"             #! VF 滤镜 > 降噪 > BM3D RTX加速（强力降噪，需NVIDIA显卡）
#                  vf set vapoursynth="~~/vs/NR_CCD_STD.vpy"             #! VF 滤镜 > 降噪 > CCD 标准版（温和降噪，适合大多数视频）

## 其他处理（特殊视频处理功能）
#                  vf set vapoursynth="~~/vs/ETC_DEINT_EX.vpy"           #! VF 滤镜 > 其他 > 去隔行（修复老旧视频的隔行扫描问题）
#                  vf set vapoursynth="~~/vs/ETC_IVTC_STD.vpy"           #! VF 滤镜 > 其他 > 去反交错（修复电影转电视的帧率问题）
#                  vf set vapoursynth="~~/vs/ETC_UAI_DML.vpy"            #! VF 滤镜 > 其他 > UAI DX12加速（通用AI增强，支持多种显卡）
+                  vf set vapoursynth="~~/vs/ETC_UAI_NV_TRT.vpy"         #! VF 滤镜 > 其他 > UAI RTX加速（通用AI增强，NVIDIA专用）
#                  vf set vapoursynth="~~/vs/ETC_UVR_MAD.vpy"            #! VF 滤镜 > 其他 > MADVR 标准版（使用 MADVR 「仅供娱乐测试，存在无法解决的内存泄露问题」）
#                  vf append vapoursynth="~~/vs/MEMC_RIFE_NV.vpy" ; vf append vapoursynth="~~/vs/ETC_UAI_NV_TRT.vpy"  #! VF 滤镜 > 自用组合 > UAI RTX加速（通用AI增强，NVIDIA专用）and RIFE RTX加速版（需要NVIDIA显卡）
#                  vf append vapoursynth="~~/vs/MEMC_SVP_PRO.vpy" ; vf append vapoursynth="~~/vs/ETC_UAI_NV_TRT.vpy"  #! VF 滤镜 > 自用组合 > UAI RTX加速（通用AI增强，NVIDIA专用）and SVP 专业版（高质量补帧，需要强力CPU）

 Ctrl+`            change-list glsl-shaders clr ""                                              #! 着色器 > 清空所有着色器
#                  ignore                                                #! 着色器 > ---
### ====================== 着色器菜单（预    设） ======================
 
#                  change-list glsl-shaders set "~~/shaders/Anime4K_Clamp_Highlights.glsl;~~/shaders/Anime4K_Restore_CNN_VL.glsl;~~/shaders/Anime4K_Upscale_CNN_x2_VL.glsl;~~/shaders/Anime4K_AutoDownscalePre_x2.glsl;~~/shaders/Anime4K_AutoDownscalePre_x4.glsl;~~/shaders/Anime4K_Upscale_CNN_x2_M.glsl"                                                        #! 着色器 > mpv.net预设 > A4K (HQ) > A4K Mode A (HQ)
#                  change-list glsl-shaders set "~~/shaders/Anime4K_Clamp_Highlights.glsl;~~/shaders/Anime4K_Restore_CNN_Soft_VL.glsl;~~/shaders/Anime4K_Upscale_CNN_x2_VL.glsl;~~/shaders/Anime4K_AutoDownscalePre_x2.glsl;~~/shaders/Anime4K_AutoDownscalePre_x4.glsl;~~/shaders/Anime4K_Upscale_CNN_x2_M.glsl"                                                   #! 着色器 > mpv.net预设 > A4K (HQ) > A4K Mode B (HQ)
#                  change-list glsl-shaders set "~~/shaders/Anime4K_Clamp_Highlights.glsl;~~/shaders/Anime4K_Upscale_Denoise_CNN_x2_VL.glsl;~~/shaders/Anime4K_AutoDownscalePre_x2.glsl;~~/shaders/Anime4K_AutoDownscalePre_x4.glsl;~~/shaders/Anime4K_Upscale_CNN_x2_M.glsl"                                                                                       #! 着色器 > mpv.net预设 > A4K (HQ) > A4K Mode C (HQ)
#                  change-list glsl-shaders set "~~/shaders/Anime4K_Clamp_Highlights.glsl;~~/shaders/Anime4K_Restore_CNN_VL.glsl;~~/shaders/Anime4K_Upscale_CNN_x2_VL.glsl;~~/shaders/Anime4K_Restore_CNN_M.glsl;~~/shaders/Anime4K_AutoDownscalePre_x2.glsl;~~/shaders/Anime4K_AutoDownscalePre_x4.glsl;~~/shaders/Anime4K_Upscale_CNN_x2_M.glsl"                  #! 着色器 > mpv.net预设 > A4K (HQ) > A4K Mode A+A (HQ)
#                  change-list glsl-shaders set "~~/shaders/Anime4K_Clamp_Highlights.glsl;~~/shaders/Anime4K_Restore_CNN_Soft_VL.glsl;~~/shaders/Anime4K_Upscale_CNN_x2_VL.glsl;~~/shaders/Anime4K_AutoDownscalePre_x2.glsl;~~/shaders/Anime4K_AutoDownscalePre_x4.glsl;~~/shaders/Anime4K_Restore_CNN_Soft_M.glsl;~~/shaders/Anime4K_Upscale_CNN_x2_M.glsl"        #! 着色器 > mpv.net预设 > A4K (HQ) > A4K Mode B+B (HQ)
#                  change-list glsl-shaders set "~~/shaders/Anime4K_Clamp_Highlights.glsl;~~/shaders/Anime4K_Upscale_Denoise_CNN_x2_VL.glsl;~~/shaders/Anime4K_AutoDownscalePre_x2.glsl;~~/shaders/Anime4K_AutoDownscalePre_x4.glsl;~~/shaders/Anime4K_Restore_CNN_M.glsl;~~/shaders/Anime4K_Upscale_CNN_x2_M.glsl"                                                 #! 着色器 > mpv.net预设 > A4K (HQ) > A4K Mode C+A (HQ)
#                  change-list glsl-shaders set "~~/shaders/Anime4K_Clamp_Highlights.glsl;~~/shaders/Anime4K_Restore_CNN_M.glsl;~~/shaders/Anime4K_Upscale_CNN_x2_M.glsl;~~/shaders/Anime4K_AutoDownscalePre_x2.glsl;~~/shaders/Anime4K_AutoDownscalePre_x4.glsl;~~/shaders/Anime4K_Upscale_CNN_x2_S.glsl"                                                          #! 着色器 > mpv.net预设 > A4K (Fast) > A4K Mode A (Fast)
#                  change-list glsl-shaders set "~~/shaders/Anime4K_Clamp_Highlights.glsl;~~/shaders/Anime4K_Restore_CNN_Soft_M.glsl;~~/shaders/Anime4K_Upscale_CNN_x2_M.glsl;~~/shaders/Anime4K_AutoDownscalePre_x2.glsl;~~/shaders/Anime4K_AutoDownscalePre_x4.glsl;~~/shaders/Anime4K_Upscale_CNN_x2_S.glsl"                                                     #! 着色器 > mpv.net预设 > A4K (Fast) > A4K Mode B (Fast)
#                  change-list glsl-shaders set "~~/shaders/Anime4K_Clamp_Highlights.glsl;~~/shaders/Anime4K_Upscale_Denoise_CNN_x2_M.glsl;~~/shaders/Anime4K_AutoDownscalePre_x2.glsl;~~/shaders/Anime4K_AutoDownscalePre_x4.glsl;~~/shaders/Anime4K_Upscale_CNN_x2_S.glsl"                                                                                        #! 着色器 > mpv.net预设 > A4K (Fast) > A4K Mode C (Fast)
#                  change-list glsl-shaders set "~~/shaders/Anime4K_Clamp_Highlights.glsl;~~/shaders/Anime4K_Restore_CNN_M.glsl;~~/shaders/Anime4K_Upscale_CNN_x2_M.glsl;~~/shaders/Anime4K_Restore_CNN_S.glsl;~~/shaders/Anime4K_AutoDownscalePre_x2.glsl;~~/shaders/Anime4K_AutoDownscalePre_x4.glsl;~~/shaders/Anime4K_Upscale_CNN_x2_S.glsl"                    #! 着色器 > mpv.net预设 > A4K (Fast) > A4K Mode A+A (Fast)
#                  change-list glsl-shaders set "~~/shaders/Anime4K_Clamp_Highlights.glsl;~~/shaders/Anime4K_Restore_CNN_Soft_M.glsl;~~/shaders/Anime4K_Upscale_CNN_x2_M.glsl;~~/shaders/Anime4K_AutoDownscalePre_x2.glsl;~~/shaders/Anime4K_AutoDownscalePre_x4.glsl;~~/shaders/Anime4K_Restore_CNN_Soft_S.glsl;~~/shaders/Anime4K_Upscale_CNN_x2_S.glsl"          #! 着色器 > mpv.net预设 > A4K (Fast) > A4K Mode B+B (Fast)
#                  change-list glsl-shaders set "~~/shaders/Anime4K_Clamp_Highlights.glsl;~~/shaders/Anime4K_Upscale_Denoise_CNN_x2_M.glsl;~~/shaders/Anime4K_AutoDownscalePre_x2.glsl;~~/shaders/Anime4K_AutoDownscalePre_x4.glsl;~~/shaders/Anime4K_Restore_CNN_S.glsl;~~/shaders/Anime4K_Upscale_CNN_x2_S.glsl"                                                  #! 着色器 > mpv.net预设 > A4K (Fast) > A4K Mode C+A (Fast)
#                  change-list glsl-shaders set "~~/shaders/Anime4K_Darken_HQ.glsl;~~/shaders/Anime4K_Thin_HQ.glsl;~~/shaders/Anime4K_Denoise_Bilateral_Mode.glsl;~~/shaders/Anime4K_Deblur_DoG.glsl"              #! 着色器 > mpv.net预设 > A4K-DTDD
#                  change-list glsl-shaders set "~~/shaders/SSimSuperRes_RT.glsl;~~/shaders/SSimDownscaler_RT.glsl"                                                                                                #! 着色器 > mpv.net预设 > SSim-SR&DS
#                  change-list glsl-shaders set "~~/shaders/FSRCNNX_x2_8_0_4_1.glsl;~~/shaders/SSimDownscaler_RT.glsl;~~/shaders/KrigBilateral.glsl"                                                               #! 着色器 > mpv.net预设 > FSRCNNX+SSDS+Krig
#                  change-list glsl-shaders toggle "~~/shaders/nnedi3_nns128_win8x4.glsl"                                                                                                                          #! 着色器 > mpv.net预设 > 开/关 LUMA: NNEDI3
#                  change-list glsl-shaders toggle "~~/shaders/ravu_zoom_r2.glsl"                                                                                                                                  #! 着色器 > mpv.net预设 > 开/关 LUMA: RAVU
#                  change-list glsl-shaders toggle "~~/shaders/FSRCNNX_x2_16_0_4_1.glsl"                                                                                                                           #! 着色器 > mpv.net预设 > 开/关 LUMA: FSRCNNX
#                  change-list glsl-shaders toggle "~~/shaders/CfL_Prediction_RT.glsl"                                                                                                                             #! 着色器 > mpv.net预设 > 开/关 CHROMA: CFL_RT
#                  change-list glsl-shaders toggle "~~/shaders/AMD_FSR_EASU_rgb_RT.glsl"                                                                                                                           #! 着色器 > mpv.net预设 > 开/关 MAIN: FSR_EASU_RT
#                  change-list glsl-shaders toggle "~~/shaders/Anime4K_Restore_CNN_M.glsl"                                                                                                                         #! 着色器 > mpv.net预设 > 开/关 MAIN: A4K_重建
#                  change-list glsl-shaders toggle "~~/shaders/Anime4K_Upscale_GAN_x2_M.glsl"                                                                                                                      #! 着色器 > mpv.net预设 > 开/关 MAIN: A4K_放大
#                  change-list glsl-shaders toggle "~~/shaders/adaptive_sharpen_RT.glsl"                                                                                                                           #! 着色器 > mpv.net预设 > 开/关 OUTPUT: 自适应锐化_RT


### ====================== 着色器菜单（无快捷键） ======================

## 着色器效果

#                   change-list glsl-shaders set "~~/shaders/AiUpscale_Fast_2x_LineArt.glsl;~~/shaders/AiUpscale_Fast_2x_LineArt_RT.glsl;~~/shaders/AiUpscale_Fast_2x_Photo.glsl;~~/shaders/AiUpscale_Fast_2x_Photo_RT.glsl;~~/shaders/AiUpscale_Fast_3x_LineArt.glsl;~~/shaders/AiUpscale_Fast_3x_LineArt_RT.glsl;~~/shaders/AiUpscale_Fast_3x_Photo.glsl;~~/shaders/AiUpscale_Fast_3x_Photo_RT.glsl;~~/shaders/AiUpscale_Fast_4x_LineArt.glsl;~~/shaders/AiUpscale_Fast_4x_LineArt_RT.glsl;~~/shaders/AiUpscale_Fast_4x_Photo.glsl;~~/shaders/AiUpscale_Fast_4x_Photo_RT.glsl" #! 着色器 > AI放大 > 快速AI放大 > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/AiUpscale_Fast_2x_LineArt.glsl" #! 着色器 > AI放大 > 快速AI放大 > 2x LineArt (2倍线条艺术)
#                   change-list glsl-shaders toggle "~~/shaders/AiUpscale_Fast_2x_LineArt_RT.glsl" #! 着色器 > AI放大 > 快速AI放大 > 2x LineArt RT (2倍实时线条艺术)
#                   change-list glsl-shaders toggle "~~/shaders/AiUpscale_Fast_2x_Photo.glsl" #! 着色器 > AI放大 > 快速AI放大 > 2x Photo (2倍照片)
#                   change-list glsl-shaders toggle "~~/shaders/AiUpscale_Fast_2x_Photo_RT.glsl" #! 着色器 > AI放大 > 快速AI放大 > 2x Photo RT (2倍实时照片)
#                   change-list glsl-shaders toggle "~~/shaders/AiUpscale_Fast_3x_LineArt.glsl" #! 着色器 > AI放大 > 快速AI放大 > 3x LineArt (3倍线条艺术)
#                   change-list glsl-shaders toggle "~~/shaders/AiUpscale_Fast_3x_LineArt_RT.glsl" #! 着色器 > AI放大 > 快速AI放大 > 3x LineArt RT (3倍实时线条艺术)
#                   change-list glsl-shaders toggle "~~/shaders/AiUpscale_Fast_3x_Photo.glsl" #! 着色器 > AI放大 > 快速AI放大 > 3x Photo (3倍照片)
#                   change-list glsl-shaders toggle "~~/shaders/AiUpscale_Fast_3x_Photo_RT.glsl" #! 着色器 > AI放大 > 快速AI放大 > 3x Photo RT (3倍实时照片)
#                   change-list glsl-shaders toggle "~~/shaders/AiUpscale_Fast_4x_LineArt.glsl" #! 着色器 > AI放大 > 快速AI放大 > 4x LineArt (4倍线条艺术)
#                   change-list glsl-shaders toggle "~~/shaders/AiUpscale_Fast_4x_LineArt_RT.glsl" #! 着色器 > AI放大 > 快速AI放大 > 4x LineArt RT (4倍实时线条艺术)
#                   change-list glsl-shaders toggle "~~/shaders/AiUpscale_Fast_4x_Photo.glsl" #! 着色器 > AI放大 > 快速AI放大 > 4x Photo (4倍照片)
#                   change-list glsl-shaders toggle "~~/shaders/AiUpscale_Fast_4x_Photo_RT.glsl" #! 着色器 > AI放大 > 快速AI放大 > 4x Photo RT (4倍实时照片)

#                   change-list glsl-shaders set "~~/shaders/AiUpscale_Fast_Sharp_2x_LineArt.glsl;~~/shaders/AiUpscale_Fast_Sharp_2x_Photo.glsl;~~/shaders/AiUpscale_Fast_Sharp_3x_LineArt.glsl;~~/shaders/AiUpscale_Fast_Sharp_3x_Photo.glsl;~~/shaders/AiUpscale_Fast_Sharp_4x_LineArt.glsl;~~/shaders/AiUpscale_Fast_Sharp_4x_Photo.glsl" #! 着色器 > AI放大 > 快速AI锐化放大 > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/AiUpscale_Fast_Sharp_2x_LineArt.glsl" #! 着色器 > AI放大 > 快速AI锐化放大 > 2x LineArt (2倍线条艺术锐化)
#                   change-list glsl-shaders toggle "~~/shaders/AiUpscale_Fast_Sharp_2x_Photo.glsl" #! 着色器 > AI放大 > 快速AI锐化放大 > 2x Photo (2倍照片锐化)
#                   change-list glsl-shaders toggle "~~/shaders/AiUpscale_Fast_Sharp_3x_LineArt.glsl" #! 着色器 > AI放大 > 快速AI锐化放大 > 3x LineArt (3倍线条艺术锐化)
#                   change-list glsl-shaders toggle "~~/shaders/AiUpscale_Fast_Sharp_3x_Photo.glsl" #! 着色器 > AI放大 > 快速AI锐化放大 > 3x Photo (3倍照片锐化)
#                   change-list glsl-shaders toggle "~~/shaders/AiUpscale_Fast_Sharp_4x_LineArt.glsl" #! 着色器 > AI放大 > 快速AI锐化放大 > 4x LineArt (4倍线条艺术锐化)
#                   change-list glsl-shaders toggle "~~/shaders/AiUpscale_Fast_Sharp_4x_Photo.glsl" #! 着色器 > AI放大 > 快速AI锐化放大 > 4x Photo (4倍照片锐化)

#                   change-list glsl-shaders set "~~/shaders/AiUpscale_HQ_2x_LineArt.glsl;~~/shaders/AiUpscale_HQ_2x_Photo.glsl;~~/shaders/AiUpscale_HQ_3x_LineArt.glsl;~~/shaders/AiUpscale_HQ_3x_Photo.glsl;~~/shaders/AiUpscale_HQ_4x_LineArt.glsl;~~/shaders/AiUpscale_HQ_4x_Photo.glsl" #! 着色器 > AI放大 > 高质量AI放大 > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/AiUpscale_HQ_2x_LineArt.glsl" #! 着色器 > AI放大 > 高质量AI放大 > 2x LineArt (2倍线条艺术高质量放大)
#                   change-list glsl-shaders toggle "~~/shaders/AiUpscale_HQ_2x_Photo.glsl" #! 着色器 > AI放大 > 高质量AI放大 > 2x Photo (2倍照片高质量放大)
#                   change-list glsl-shaders toggle "~~/shaders/AiUpscale_HQ_3x_LineArt.glsl" #! 着色器 > AI放大 > 高质量AI放大 > 3x LineArt (3倍线条艺术高质量放大)
#                   change-list glsl-shaders toggle "~~/shaders/AiUpscale_HQ_3x_Photo.glsl" #! 着色器 > AI放大 > 高质量AI放大 > 3x Photo (3倍照片高质量放大)
#                   change-list glsl-shaders toggle "~~/shaders/AiUpscale_HQ_4x_LineArt.glsl" #! 着色器 > AI放大 > 高质量AI放大 > 4x LineArt (4倍线条艺术高质量放大)
#                   change-list glsl-shaders toggle "~~/shaders/AiUpscale_HQ_4x_Photo.glsl" #! 着色器 > AI放大 > 高质量AI放大 > 4x Photo (4倍照片高质量放大)

#                   change-list glsl-shaders set "~~/shaders/AiUpscale_HQ_Sharp_2x_LineArt.glsl;~~/shaders/AiUpscale_HQ_Sharp_2x_Photo.glsl;~~/shaders/AiUpscale_HQ_Sharp_3x_LineArt.glsl;~~/shaders/AiUpscale_HQ_Sharp_3x_Photo.glsl;~~/shaders/AiUpscale_HQ_Sharp_4x_LineArt.glsl;~~/shaders/AiUpscale_HQ_Sharp_4x_Photo.glsl" #! 着色器 > AI放大 > 高质量AI锐化放大 > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/AiUpscale_HQ_Sharp_2x_LineArt.glsl" #! 着色器 > AI放大 > 高质量AI锐化放大 > 2x LineArt (2倍线条艺术高质量锐化)
#                   change-list glsl-shaders toggle "~~/shaders/AiUpscale_HQ_Sharp_2x_Photo.glsl" #! 着色器 > AI放大 > 高质量AI锐化放大 > 2x Photo (2倍照片高质量锐化)
#                   change-list glsl-shaders toggle "~~/shaders/AiUpscale_HQ_Sharp_3x_LineArt.glsl" #! 着色器 > AI放大 > 高质量AI锐化放大 > 3x LineArt (3倍线条艺术高质量锐化)
#                   change-list glsl-shaders toggle "~~/shaders/AiUpscale_HQ_Sharp_3x_Photo.glsl" #! 着色器 > AI放大 > 高质量AI锐化放大 > 3x Photo (3倍照片高质量锐化)
#                   change-list glsl-shaders toggle "~~/shaders/AiUpscale_HQ_Sharp_4x_LineArt.glsl" #! 着色器 > AI放大 > 高质量AI锐化放大 > 4x LineArt (4倍线条艺术高质量锐化)
#                   change-list glsl-shaders toggle "~~/shaders/AiUpscale_HQ_Sharp_4x_Photo.glsl" #! 着色器 > AI放大 > 高质量AI锐化放大 > 4x Photo (4倍照片高质量锐化)

#                   change-list glsl-shaders set "~~/shaders/AiUpscale_Medium_2x_LineArt.glsl;~~/shaders/AiUpscale_Medium_2x_Photo.glsl;~~/shaders/AiUpscale_Medium_3x_LineArt.glsl;~~/shaders/AiUpscale_Medium_3x_Photo.glsl;~~/shaders/AiUpscale_Medium_4x_LineArt.glsl;~~/shaders/AiUpscale_Medium_4x_Photo.glsl" #! 着色器 > AI放大 > 中等质量AI放大 > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/AiUpscale_Medium_2x_LineArt.glsl" #! 着色器 > AI放大 > 中等质量AI放大 > 2x LineArt (2倍线条艺术中等质量放大)
#                   change-list glsl-shaders toggle "~~/shaders/AiUpscale_Medium_2x_Photo.glsl" #! 着色器 > AI放大 > 中等质量AI放大 > 2x Photo (2倍照片中等质量放大)
#                   change-list glsl-shaders toggle "~~/shaders/AiUpscale_Medium_3x_LineArt.glsl" #! 着色器 > AI放大 > 中等质量AI放大 > 3x LineArt (3倍线条艺术中等质量放大)
#                   change-list glsl-shaders toggle "~~/shaders/AiUpscale_Medium_3x_Photo.glsl" #! 着色器 > AI放大 > 中等质量AI放大 > 3x Photo (3倍照片中等质量放大)
#                   change-list glsl-shaders toggle "~~/shaders/AiUpscale_Medium_4x_LineArt.glsl" #! 着色器 > AI放大 > 中等质量AI放大 > 4x LineArt (4倍线条艺术中等质量放大)
#                   change-list glsl-shaders toggle "~~/shaders/AiUpscale_Medium_4x_Photo.glsl" #! 着色器 > AI放大 > 中等质量AI放大 > 4x Photo (4倍照片中等质量放大)

#                   change-list glsl-shaders set "~~/shaders/AiUpscale_Medium_Sharp_2x_LineArt.glsl;~~/shaders/AiUpscale_Medium_Sharp_2x_Photo.glsl;~~/shaders/AiUpscale_Medium_Sharp_3x_LineArt.glsl;~~/shaders/AiUpscale_Medium_Sharp_3x_Photo.glsl;~~/shaders/AiUpscale_Medium_Sharp_4x_LineArt.glsl;~~/shaders/AiUpscale_Medium_Sharp_4x_Photo.glsl" #! 着色器 > AI放大 > 中等质量AI锐化放大 > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/AiUpscale_Medium_Sharp_2x_LineArt.glsl" #! 着色器 > AI放大 > 中等质量AI锐化放大 > 2x LineArt (2倍线条艺术中等质量锐化)
#                   change-list glsl-shaders toggle "~~/shaders/AiUpscale_Medium_Sharp_2x_Photo.glsl" #! 着色器 > AI放大 > 中等质量AI锐化放大 > 2x Photo (2倍照片中等质量锐化)
#                   change-list glsl-shaders toggle "~~/shaders/AiUpscale_Medium_Sharp_3x_LineArt.glsl" #! 着色器 > AI放大 > 中等质量AI锐化放大 > 3x LineArt (3倍线条艺术中等质量锐化)
#                   change-list glsl-shaders toggle "~~/shaders/AiUpscale_Medium_Sharp_3x_Photo.glsl" #! 着色器 > AI放大 > 中等质量AI锐化放大 > 3x Photo (3倍照片中等质量锐化)
#                   change-list glsl-shaders toggle "~~/shaders/AiUpscale_Medium_Sharp_4x_LineArt.glsl" #! 着色器 > AI放大 > 中等质量AI锐化放大 > 4x LineArt (4倍线条艺术中等质量锐化)
#                   change-list glsl-shaders toggle "~~/shaders/AiUpscale_Medium_Sharp_4x_Photo.glsl" #! 着色器 > AI放大 > 中等质量AI锐化放大 > 4x Photo (4倍照片中等质量锐化)

#                   change-list glsl-shaders set "~~/shaders/FSRCNNX_x1_16_0_4_1_anime_distort.glsl;~~/shaders/FSRCNNX_x1_16_0_4_1_distort.glsl;~~/shaders/FSRCNNX_x2_16_0_4_1.glsl;~~/shaders/FSRCNNX_x2_16_0_4_1_anime_distort.glsl;~~/shaders/FSRCNNX_x2_16_0_4_1_distort.glsl;~~/shaders/FSRCNNX_x2_56_16_4_1.glsl;~~/shaders/FSRCNNX_x2_8_0_4_1.glsl;~~/shaders/FSRCNNX_x2_8_0_4_1_LineArt.glsl" #! 着色器 > AI放大 > FSRCNNX (快速超分辨率) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/FSRCNNX_x1_16_0_4_1_anime_distort.glsl" #! 着色器 > AI放大 > FSRCNNX (快速超分辨率) > X1 Anime Distort (1倍动漫失真超分)
#                   change-list glsl-shaders toggle "~~/shaders/FSRCNNX_x1_16_0_4_1_distort.glsl" #! 着色器 > AI放大 > FSRCNNX (快速超分辨率) > X1 Distort (1倍失真超分)
#                   change-list glsl-shaders toggle "~~/shaders/FSRCNNX_x2_16_0_4_1.glsl" #! 着色器 > AI放大 > FSRCNNX (快速超分辨率) > X2 Standard (2倍标准超分)
#                   change-list glsl-shaders toggle "~~/shaders/FSRCNNX_x2_16_0_4_1_anime_distort.glsl" #! 着色器 > AI放大 > FSRCNNX (快速超分辨率) > X2 Anime Distort (2倍动漫失真超分)
#                   change-list glsl-shaders toggle "~~/shaders/FSRCNNX_x2_16_0_4_1_distort.glsl" #! 着色器 > AI放大 > FSRCNNX (快速超分辨率) > X2 Distort (2倍失真超分)
#                   change-list glsl-shaders toggle "~~/shaders/FSRCNNX_x2_56_16_4_1.glsl" #! 着色器 > AI放大 > FSRCNNX (快速超分辨率) > X2 Quality (2倍高质量超分)
#                   change-list glsl-shaders toggle "~~/shaders/FSRCNNX_x2_8_0_4_1.glsl" #! 着色器 > AI放大 > FSRCNNX (快速超分辨率) > X2 Fast (2倍快速超分)
#                   change-list glsl-shaders toggle "~~/shaders/FSRCNNX_x2_8_0_4_1_LineArt.glsl" #! 着色器 > AI放大 > FSRCNNX (快速超分辨率) > X2 LineArt (2倍线条艺术超分)

#                   change-list glsl-shaders set "~~/shaders/nnedi3_nns128_win8x4.glsl;~~/shaders/nnedi3_nns128_win8x6.glsl;~~/shaders/nnedi3_nns16_win8x4.glsl;~~/shaders/nnedi3_nns16_win8x6.glsl;~~/shaders/nnedi3_nns256_win8x4.glsl;~~/shaders/nnedi3_nns256_win8x6.glsl;~~/shaders/nnedi3_nns32_win8x4.glsl;~~/shaders/nnedi3_nns32_win8x6.glsl;~~/shaders/nnedi3_nns64_win8x4.glsl;~~/shaders/nnedi3_nns64_win8x6.glsl" #! 着色器 > AI放大 > Nnedi3 (高质量插值) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/nnedi3_nns128_win8x4.glsl" #! 着色器 > AI放大 > Nnedi3 (高质量插值) > NNS128 WIN8X4 (128神经元8x4窗口)
#                   change-list glsl-shaders toggle "~~/shaders/nnedi3_nns128_win8x6.glsl" #! 着色器 > AI放大 > Nnedi3 (高质量插值) > NNS128 WIN8X6 (128神经元8x6窗口)
#                   change-list glsl-shaders toggle "~~/shaders/nnedi3_nns16_win8x4.glsl" #! 着色器 > AI放大 > Nnedi3 (高质量插值) > NNS16 WIN8X4 (16神经元8x4窗口)
#                   change-list glsl-shaders toggle "~~/shaders/nnedi3_nns16_win8x6.glsl" #! 着色器 > AI放大 > Nnedi3 (高质量插值) > NNS16 WIN8X6 (16神经元8x6窗口)
#                   change-list glsl-shaders toggle "~~/shaders/nnedi3_nns256_win8x4.glsl" #! 着色器 > AI放大 > Nnedi3 (高质量插值) > NNS256 WIN8X4 (256神经元8x4窗口)
#                   change-list glsl-shaders toggle "~~/shaders/nnedi3_nns256_win8x6.glsl" #! 着色器 > AI放大 > Nnedi3 (高质量插值) > NNS256 WIN8X6 (256神经元8x6窗口)
#                   change-list glsl-shaders toggle "~~/shaders/nnedi3_nns32_win8x4.glsl" #! 着色器 > AI放大 > Nnedi3 (高质量插值) > NNS32 WIN8X4 (32神经元8x4窗口)
#                   change-list glsl-shaders toggle "~~/shaders/nnedi3_nns32_win8x6.glsl" #! 着色器 > AI放大 > Nnedi3 (高质量插值) > NNS32 WIN8X6 (32神经元8x6窗口)
#                   change-list glsl-shaders toggle "~~/shaders/nnedi3_nns64_win8x4.glsl" #! 着色器 > AI放大 > Nnedi3 (高质量插值) > NNS64 WIN8X4 (64神经元8x4窗口)
#                   change-list glsl-shaders toggle "~~/shaders/nnedi3_nns64_win8x6.glsl" #! 着色器 > AI放大 > Nnedi3 (高质量插值) > NNS64 WIN8X6 (64神经元8x6窗口)

#                   change-list glsl-shaders set "~~/shaders/ravu_r2.glsl;~~/shaders/ravu_r2_rgb.glsl;~~/shaders/ravu_r2_yuv.glsl;~~/shaders/ravu_r3.glsl;~~/shaders/ravu_r3_rgb.glsl;~~/shaders/ravu_r3_yuv.glsl;~~/shaders/ravu_r4.glsl;~~/shaders/ravu_r4_rgb.glsl;~~/shaders/ravu_r4_yuv.glsl" #! 着色器 > AI放大 > Ravu (高质量实时缩放) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/ravu_r2.glsl" #! 着色器 > AI放大 > Ravu (高质量实时缩放) > R2 (2次迭代)
#                   change-list glsl-shaders toggle "~~/shaders/ravu_r2_rgb.glsl" #! 着色器 > AI放大 > Ravu (高质量实时缩放) > R2 RGB (2次迭代，RGB模式)
#                   change-list glsl-shaders toggle "~~/shaders/ravu_r2_yuv.glsl" #! 着色器 > AI放大 > Ravu (高质量实时缩放) > R2 YUV (2次迭代，YUV模式)
#                   change-list glsl-shaders toggle "~~/shaders/ravu_r3.glsl" #! 着色器 > AI放大 > Ravu (高质量实时缩放) > R3 (3次迭代)
#                   change-list glsl-shaders toggle "~~/shaders/ravu_r3_rgb.glsl" #! 着色器 > AI放大 > Ravu (高质量实时缩放) > R3 RGB (3次迭代，RGB模式)
#                   change-list glsl-shaders toggle "~~/shaders/ravu_r3_yuv.glsl" #! 着色器 > AI放大 > Ravu (高质量实时缩放) > R3 YUV (3次迭代，YUV模式)
#                   change-list glsl-shaders toggle "~~/shaders/ravu_r4.glsl" #! 着色器 > AI放大 > Ravu (高质量实时缩放) > R4 (4次迭代)
#                   change-list glsl-shaders toggle "~~/shaders/ravu_r4_rgb.glsl" #! 着色器 > AI放大 > Ravu (高质量实时缩放) > R4 RGB (4次迭代，RGB模式)
#                   change-list glsl-shaders toggle "~~/shaders/ravu_r4_yuv.glsl" #! 着色器 > AI放大 > Ravu (高质量实时缩放) > R4 YUV (4次迭代，YUV模式)

#                   change-list glsl-shaders set "~~/shaders/ravu_3x_r2.glsl;~~/shaders/ravu_3x_r2_rgb.glsl;~~/shaders/ravu_3x_r2_yuv.glsl;~~/shaders/ravu_3x_r3.glsl;~~/shaders/ravu_3x_r3_rgb.glsl;~~/shaders/ravu_3x_r3_yuv.glsl;~~/shaders/ravu_3x_r4.glsl;~~/shaders/ravu_3x_r4_rgb.glsl;~~/shaders/ravu_3x_r4_yuv.glsl" #! 着色器 > AI放大 > Ravu 3X (3倍Ravu缩放) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/ravu_3x_r2.glsl" #! 着色器 > AI放大 > Ravu 3X (3倍Ravu缩放) > R2 (2次迭代)
#                   change-list glsl-shaders toggle "~~/shaders/ravu_3x_r2_rgb.glsl" #! 着色器 > AI放大 > Ravu 3X (3倍Ravu缩放) > R2 RGB (2次迭代，RGB模式)
#                   change-list glsl-shaders toggle "~~/shaders/ravu_3x_r2_yuv.glsl" #! 着色器 > AI放大 > Ravu 3X (3倍Ravu缩放) > R2 YUV (2次迭代，YUV模式)
#                   change-list glsl-shaders toggle "~~/shaders/ravu_3x_r3.glsl" #! 着色器 > AI放大 > Ravu 3X (3倍Ravu缩放) > R3 (3次迭代)
#                   change-list glsl-shaders toggle "~~/shaders/ravu_3x_r3_rgb.glsl" #! 着色器 > AI放大 > Ravu 3X (3倍Ravu缩放) > R3 RGB (3次迭代，RGB模式)
#                   change-list glsl-shaders toggle "~~/shaders/ravu_3x_r3_yuv.glsl" #! 着色器 > AI放大 > Ravu 3X (3倍Ravu缩放) > R3 YUV (3次迭代，YUV模式)
#                   change-list glsl-shaders toggle "~~/shaders/ravu_3x_r4.glsl" #! 着色器 > AI放大 > Ravu 3X (3倍Ravu缩放) > R4 (4次迭代)
#                   change-list glsl-shaders toggle "~~/shaders/ravu_3x_r4_rgb.glsl" #! 着色器 > AI放大 > Ravu 3X (3倍Ravu缩放) > R4 RGB (4次迭代，RGB模式)
#                   change-list glsl-shaders toggle "~~/shaders/ravu_3x_r4_yuv.glsl" #! 着色器 > AI放大 > Ravu 3X (3倍Ravu缩放) > R4 YUV (4次迭代，YUV模式)

#                   change-list glsl-shaders set "~~/shaders/ravu_lite_ar_r2.glsl;~~/shaders/ravu_lite_ar_r3.glsl;~~/shaders/ravu_lite_ar_r4.glsl;~~/shaders/ravu_lite_r2.glsl;~~/shaders/ravu_lite_r3.glsl;~~/shaders/ravu_lite_r4.glsl" #! 着色器 > AI放大 > Ravu Lite (轻量级Ravu缩放) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/ravu_lite_ar_r2.glsl" #! 着色器 > AI放大 > Ravu Lite (轻量级Ravu缩放) > AR R2 (2次迭代，带纵横比)
#                   change-list glsl-shaders toggle "~~/shaders/ravu_lite_ar_r3.glsl" #! 着色器 > AI放大 > Ravu Lite (轻量级Ravu缩放) > AR R3 (3次迭代，带纵横比)
#                   change-list glsl-shaders toggle "~~/shaders/ravu_lite_ar_r4.glsl" #! 着色器 > AI放大 > Ravu Lite (轻量级Ravu缩放) > AR R4 (4次迭代，带纵横比)
#                   change-list glsl-shaders toggle "~~/shaders/ravu_lite_r2.glsl" #! 着色器 > AI放大 > Ravu Lite (轻量级Ravu缩放) > R2 (2次迭代)
#                   change-list glsl-shaders toggle "~~/shaders/ravu_lite_r3.glsl" #! 着色器 > AI放大 > Ravu Lite (轻量级Ravu缩放) > R3 (3次迭代)
#                   change-list glsl-shaders toggle "~~/shaders/ravu_lite_r4.glsl" #! 着色器 > AI放大 > Ravu Lite (轻量级Ravu缩放) > R4 (4次迭代)

#                   change-list glsl-shaders set "~~/shaders/ravu_zoom_ar_r2.glsl;~~/shaders/ravu_zoom_ar_r2_rgb.glsl;~~/shaders/ravu_zoom_ar_r2_yuv.glsl;~~/shaders/ravu_zoom_ar_r3.glsl;~~/shaders/ravu_zoom_ar_r3_rgb.glsl;~~/shaders/ravu_zoom_ar_r3_yuv.glsl;~~/shaders/ravu_zoom_pc_r3.glsl;~~/shaders/ravu_zoom_pc_r3_rgb.glsl;~~/shaders/ravu_zoom_r2.glsl;~~/shaders/ravu_zoom_r2_chroma.glsl;~~/shaders/ravu_zoom_r2_rgb.glsl;~~/shaders/ravu_zoom_r2_yuv.glsl;~~/shaders/ravu_zoom_r3.glsl;~~/shaders/ravu_zoom_r3_chroma.glsl;~~/shaders/ravu_zoom_r3_rgb.glsl;~~/shaders/ravu_zoom_r3_yuv.glsl" #! 着色器 > AI放大 > Ravu Zoom (Ravu放大) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/ravu_zoom_ar_r2.glsl" #! 着色器 > AI放大 > Ravu Zoom (Ravu放大) > AR R2 (2次迭代，带纵横比)
#                   change-list glsl-shaders toggle "~~/shaders/ravu_zoom_ar_r2_rgb.glsl" #! 着色器 > AI放大 > Ravu Zoom (Ravu放大) > AR R2 RGB (2次迭代，RGB模式，带纵横比)
#                   change-list glsl-shaders toggle "~~/shaders/ravu_zoom_ar_r2_yuv.glsl" #! 着色器 > AI放大 > Ravu Zoom (Ravu放大) > AR R2 YUV (2次迭代，YUV模式，带纵横比)
#                   change-list glsl-shaders toggle "~~/shaders/ravu_zoom_ar_r3.glsl" #! 着色器 > AI放大 > Ravu Zoom (Ravu放大) > AR R3 (3次迭代，带纵横比)
#                   change-list glsl-shaders toggle "~~/shaders/ravu_zoom_ar_r3_rgb.glsl" #! 着色器 > AI放大 > Ravu Zoom (Ravu放大) > AR R3 RGB (3次迭代，RGB模式，带纵横比)
#                   change-list glsl-shaders toggle "~~/shaders/ravu_zoom_ar_r3_yuv.glsl" #! 着色器 > AI放大 > Ravu Zoom (Ravu放大) > AR R3 YUV (3次迭代，YUV模式，带纵横比)
#                   change-list glsl-shaders toggle "~~/shaders/ravu_zoom_pc_r3.glsl" #! 着色器 > AI放大 > Ravu Zoom (Ravu放大) > PC R3 (3次迭代，PC模式)
#                   change-list glsl-shaders toggle "~~/shaders/ravu_zoom_pc_r3_rgb.glsl" #! 着色器 > AI放大 > Ravu Zoom (Ravu放大) > PC R3 RGB (3次迭代，RGB模式，PC模式)
#                   change-list glsl-shaders toggle "~~/shaders/ravu_zoom_r2.glsl" #! 着色器 > AI放大 > Ravu Zoom (Ravu放大) > R2 (2次迭代)
#                   change-list glsl-shaders toggle "~~/shaders/ravu_zoom_r2_chroma.glsl" #! 着色器 > AI放大 > Ravu Zoom (Ravu放大) > R2 CHROMA (2次迭代，色度模式)
#                   change-list glsl-shaders toggle "~~/shaders/ravu_zoom_r2_rgb.glsl" #! 着色器 > AI放大 > Ravu Zoom (Ravu放大) > R2 RGB (2次迭代，RGB模式)
#                   change-list glsl-shaders toggle "~~/shaders/ravu_zoom_r2_yuv.glsl" #! 着色器 > AI放大 > Ravu Zoom (Ravu放大) > R2 YUV (2次迭代，YUV模式)
#                   change-list glsl-shaders toggle "~~/shaders/ravu_zoom_r3.glsl" #! 着色器 > AI放大 > Ravu Zoom (Ravu放大) > R3 (3次迭代)
#                   change-list glsl-shaders toggle "~~/shaders/ravu_zoom_r3_chroma.glsl" #! 着色器 > AI放大 > Ravu Zoom (Ravu放大) > R3 CHROMA (3次迭代，色度模式)
#                   change-list glsl-shaders toggle "~~/shaders/ravu_zoom_r3_rgb.glsl" #! 着色器 > AI放大 > Ravu Zoom (Ravu放大) > R3 RGB (3次迭代，RGB模式)
#                   change-list glsl-shaders toggle "~~/shaders/ravu_zoom_r3_yuv.glsl" #! 着色器 > AI放大 > Ravu Zoom (Ravu放大) > R3 YUV (3次迭代，YUV模式)

#                   change-list glsl-shaders set "~~/shaders/ACNet.glsl;~~/shaders/ACNet_HDN_L1.glsl;~~/shaders/ACNet_HDN_L2.glsl;~~/shaders/ACNet_HDN_L3.glsl;~~/shaders/ACNet_HDN_RT.glsl" #! 着色器 > 动漫/卡通优化 > ACNet系列 (AI漫画/动画降噪) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/ACNet.glsl" #! 着色器 > 动漫/卡通优化 > ACNet系列 (AI漫画/动画降噪) > ACNet (标准模式)
#                   change-list glsl-shaders toggle "~~/shaders/ACNet_HDN_L1.glsl" #! 着色器 > 动漫/卡通优化 > ACNet系列 (AI漫画/动画降噪) > HDN L1 (降噪等级1)
#                   change-list glsl-shaders toggle "~~/shaders/ACNet_HDN_L2.glsl" #! 着色器 > 动漫/卡通优化 > ACNet系列 (AI漫画/动画降噪) > HDN L2 (降噪等级2)
#                   change-list glsl-shaders toggle "~~/shaders/ACNet_HDN_L3.glsl" #! 着色器 > 动漫/卡通优化 > ACNet系列 (AI漫画/动画降噪) > HDN L3 (降噪等级3)
#                   change-list glsl-shaders toggle "~~/shaders/ACNet_HDN_RT.glsl" #! 着色器 > 动漫/卡通优化 > ACNet系列 (AI漫画/动画降噪) > HDN RT (实时降噪)

#                   change-list glsl-shaders set "~~/shaders/Ani4Kv2_ArtCNN_C4F32_i2.glsl;~~/shaders/Ani4Kv2_ArtCNN_C4F32_i2_CMP.glsl" #! 着色器 > 动漫/卡通优化 > Ani4Kv2系列 (高质量动漫放大v2) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/Ani4Kv2_ArtCNN_C4F32_i2.glsl" #! 着色器 > 动漫/卡通优化 > Ani4Kv2系列 (高质量动漫放大v2) > ARTCNN C4F32 I2 (动漫图像处理，清晰度提升)
#                   change-list glsl-shaders toggle "~~/shaders/Ani4Kv2_ArtCNN_C4F32_i2_CMP.glsl" #! 着色器 > 动漫/卡通优化 > Ani4Kv2系列 (高质量动漫放大v2) > ARTCNN C4F32 I2 CMP (动漫图像处理，带比较模式)

#                   change-list glsl-shaders set "~~/shaders/AniSD_ArtCNN_C4F32_i4.glsl;~~/shaders/AniSD_ArtCNN_C4F32_i4_CMP.glsl" #! 着色器 > 动漫/卡通优化 > AniSD系列 (动漫标准清晰度处理) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/AniSD_ArtCNN_C4F32_i4.glsl" #! 着色器 > 动漫/卡通优化 > AniSD系列 (动漫标准清晰度处理) > ARTCNN C4F32 I4 (动漫图像处理，清晰度提升)
#                   change-list glsl-shaders toggle "~~/shaders/AniSD_ArtCNN_C4F32_i4_CMP.glsl" #! 着色器 > 动漫/卡通优化 > AniSD系列 (动漫标准清晰度处理) > ARTCNN C4F32 I4 CMP (动漫图像处理，带比较模式)

#                   change-list glsl-shaders set "~~/shaders/Anime4K_AIO_optQ.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K AIO OptQ (一体化优化) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/Anime4K_AIO_optQ.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K AIO OptQ (一体化优化) > optQ (优化质量模式)

#                   change-list glsl-shaders set "~~/shaders/Anime4K_AutoDownscalePre_x2.glsl;~~/shaders/Anime4K_AutoDownscalePre_x4.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K AutoDownscalePre (自动预降采样) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/Anime4K_AutoDownscalePre_x2.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K AutoDownscalePre (自动预降采样) > x2 (2倍预降采样)
#                   change-list glsl-shaders toggle "~~/shaders/Anime4K_AutoDownscalePre_x4.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K AutoDownscalePre (自动预降采样) > x4 (4倍预降采样)

#                   change-list glsl-shaders set "~~/shaders/Anime4K_Clamp_Highlights.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K Clamp Highlights (高光钳制) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/Anime4K_Clamp_Highlights.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K Clamp Highlights (高光钳制) > Clamp Highlights (钳制高光，防止过曝)

#                   change-list glsl-shaders set "~~/shaders/Anime44K_Darken_Fast.glsl;~~/shaders/Anime4K_Darken_HQ.glsl;~~/shaders/Anime4K_Darken_VeryFast.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K Darken (暗化) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/Anime4K_Darken_Fast.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K Darken (暗化) > Fast (快速暗化)
#                   change-list glsl-shaders toggle "~~/shaders/Anime4K_Darken_HQ.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K Darken (暗化) > HQ (高质量暗化)
#                   change-list glsl-shaders toggle "~~/shaders/Anime4K_Darken_VeryFast.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K Darken (暗化) > Very Fast (超快速暗化)

#                   change-list glsl-shaders set "~~/shaders/Anime4K_Deblur_DoG.glsl;~~/shaders/Anime4K_Deblur_Original.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K Deblur (去模糊) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/Anime4K_Deblur_DoG.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K Deblur (去模糊) > DoG (差分高斯去模糊)
#                   change-list glsl-shaders toggle "~~/shaders/Anime4K_Deblur_Original.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K Deblur (去模糊) > Original (原始去模糊算法)

#                   change-list glsl-shaders set "~~/shaders/Anime4K_Denoise_Bilateral_Mean.glsl;~~/shaders/Anime4K_Denoise_Bilateral_Median.glsl;~~/shaders/Anime4K_Denoise_Bilateral_Mode.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K Denoise Bilateral (双边降噪) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/Anime4K_Denoise_Bilateral_Mean.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K Denoise Bilateral (双边降噪) > Mean (均值双边降噪)
#                   change-list glsl-shaders toggle "~~/shaders/Anime4K_Denoise_Bilateral_Median.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K Denoise Bilateral (双边降噪) > Median (中值双边降噪)
#                   change-list glsl-shaders toggle "~~/shaders/Anime4K_Denoise_Bilateral_Mode.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K Denoise Bilateral (双边降噪) > Mode (众数双边降噪)

#                   change-list glsl-shaders set "~~/shaders/Anime4K_legacy_09.glsl;~~/shaders/Anime4K_legacy_10.glsl;~~/shaders/Anime4K_legacy_10_Fast.glsl;~~/shaders/Anime4K_legacy_10_UltraFast.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K Legacy (旧版算法) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/Anime4K_legacy_09.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K Legacy (旧版算法) > 09 (旧版0.9)
#                   change-list glsl-shaders toggle "~~/shaders/Anime4K_legacy_10.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K Legacy (旧版算法) > 10 (旧版1.0)
#                   change-list glsl-shaders toggle "~~/shaders/Anime4K_legacy_10_Fast.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K Legacy (旧版算法) > 10 Fast (旧版1.0快速)
#                   change-list glsl-shaders toggle "~~/shaders/Anime4K_legacy_10_UltraFast.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K Legacy (旧版算法) > 10 Ultra Fast (旧版1.0超快速)

#                   change-list glsl-shaders set "~~/shaders/Anime4K_Restore_CNN_L.glsl;~~/shaders/Anime4K_Restore_CNN_M.glsl;~~/shaders/Anime4K_Restore_CNN_S.glsl;~~/shaders/Anime4K_Restore_CNN_Soft_L.glsl;~~/shaders/Anime4K_Restore_CNN_Soft_M.glsl;~~/shaders/Anime4K_Restore_CNN_Soft_S.glsl;~~/shaders/Anime4K_Restore_CNN_Soft_UL.glsl;~~/shaders/Anime4K_Restore_CNN_Soft_VL.glsl;~~/shaders/Anime4K_Restore_CNN_UL.glsl;~~/shaders/Anime4K_Restore_CNN_VL.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K Restore CNN (CNN修复) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/Anime4K_Restore_CNN_L.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K Restore CNN (CNN修复) > L (大尺寸CNN修复)
#                   change-list glsl-shaders toggle "~~/shaders/Anime4K_Restore_CNN_M.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K Restore CNN (CNN修复) > M (中尺寸CNN修复)
#                   change-list glsl-shaders toggle "~~/shaders/Anime4K_Restore_CNN_S.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K Restore CNN (CNN修复) > S (小尺寸CNN修复)
#                   change-list glsl-shaders toggle "~~/shaders/Anime4K_Restore_CNN_Soft_L.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K Restore CNN (CNN修复) > Soft L (柔和模式大尺寸CNN修复)
#                   change-list glsl-shaders toggle "~~/shaders/Anime4K_Restore_CNN_Soft_M.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K Restore CNN (CNN修复) > Soft M (柔和模式中尺寸CNN修复)
#                   change-list glsl-shaders toggle "~~/shaders/Anime4K_Restore_CNN_Soft_S.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K Restore CNN (CNN修复) > Soft S (柔和模式小尺寸CNN修复)
#                   change-list glsl-shaders toggle "~~/shaders/Anime4K_Restore_CNN_Soft_UL.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K Restore CNN (CNN修复) > Soft UL (柔和模式超大尺寸CNN修复)
#                   change-list glsl-shaders toggle "~~/shaders/Anime4K_Restore_CNN_Soft_VL.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K Restore CNN (CNN修复) > Soft VL (柔和模式超超大尺寸CNN修复)
#                   change-list glsl-shaders toggle "~~/shaders/Anime4K_Restore_CNN_UL.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K Restore CNN (CNN修复) > UL (超大尺寸CNN修复)
#                   change-list glsl-shaders toggle "~~/shaders/Anime4K_Restore_CNN_VL.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K Restore CNN (CNN修复) > VL (超超大尺寸CNN修复)

#                   change-list glsl-shaders set "~~/shaders/Anime4K_Restore_GAN_UL.glsl;~~/shaders/Anime4K_Restore_GAN_UUL.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K Restore GAN (GAN修复) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/Anime4K_Restore_GAN_UL.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K Restore GAN (GAN修复) > UL (超大尺寸GAN修复)
#                   change-list glsl-shaders toggle "~~/shaders/Anime4K_Restore_GAN_UUL.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K Restore GAN (GAN修复) > UUL (超超大尺寸GAN修复)

#                   change-list glsl-shaders set "~~/shaders/Anime4K_Thin_Fast.glsl;~~/shaders/Anime4K_Thin_HQ.glsl;~~/shaders/Anime4K_Thin_VeryFast.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K Thin (线条细化) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/Anime4K_Thin_Fast.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K Thin (线条细化) > Fast (快速线条细化)
#                   change-list glsl-shaders toggle "~~/shaders/Anime4K_Thin_HQ.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K Thin (线条细化) > HQ (高质量线条细化)
#                   change-list glsl-shaders toggle "~~/shaders/Anime4K_Thin_VeryFast.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K Thin (线条细化) > Very Fast (超快速线条细化)

#                   change-list glsl-shaders set "~~/shaders/Anime4K_3DGraphics_AA_Upscale_x2_US.glsl;~~/shaders/Anime4K_3DGraphics_Upscale_x2_US.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K_3DGraphics (3D图形优化) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/Anime4K_3DGraphics_AA_Upscale_x2_US.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K_3DGraphics (3D图形优化) > AA Upscale x2 US (2倍抗锯齿上采样)
#                   change-list glsl-shaders toggle "~~/shaders/Anime4K_3DGraphics_Upscale_x2_US.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K_3DGraphics (3D图形优化) > Upscale x2 US (2倍上采样)

#                   change-list glsl-shaders set "~~/shaders/Anime4K_Upscale_CNN_x2_L.glsl;~~/shaders/Anime4K_Upscale_CNN_x2_M.glsl;~~/shaders/Anime4K_Upscale_CNN_x2_S.glsl;~~/shaders/Anime4K_Upscale_CNN_x2_UL.glsl;~~/shaders/Anime4K_Upscale_CNN_x2_VL.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K_Upscale_CNN (CNN上采样) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/Anime4K_Upscale_CNN_x2_L.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K_Upscale_CNN (CNN上采样) > L (2倍大尺寸CNN上采样)
#                   change-list glsl-shaders toggle "~~/shaders/Anime4K_Upscale_CNN_x2_M.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K_Upscale_CNN (CNN上采样) > M (2倍中尺寸CNN上采样)
#                   change-list glsl-shaders toggle "~~/shaders/Anime4K_Upscale_CNN_x2_S.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K_Upscale_CNN (CNN上采样) > S (2倍小尺寸CNN上采样)
#                   change-list glsl-shaders toggle "~~/shaders/Anime4K_Upscale_CNN_x2_UL.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K_Upscale_CNN (CNN上采样) > UL (2倍超大尺寸CNN上采样)
#                   change-list glsl-shaders toggle "~~/shaders/Anime4K_Upscale_CNN_x2_VL.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K_Upscale_CNN (CNN上采样) > VL (2倍超超大尺寸CNN上采样)

#                   change-list glsl-shaders set "~~/shaders/Anime4K_Upscale_Deblur_DoG_x2.glsl;~~/shaders/Anime4K_Upscale_Deblur_Original_x2.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K_Upscale_Deblur (去模糊上采样) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/Anime4K_Upscale_Deblur_DoG_x2.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K_Upscale_Deblur (去模糊上采样) > DoG x2 (2倍差分高斯去模糊上采样)
#                   change-list glsl-shaders toggle "~~/shaders/Anime4K_Upscale_Deblur_Original_x2.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K_Upscale_Deblur (去模糊上采样) > Original x2 (2倍原始去模糊上采样)

#                   change-list glsl-shaders set "~~/shaders/Anime4K_Upscale_Denoise_CNN_x2_L.glsl;~~/shaders/Anime4K_Upscale_Denoise_CNN_x2_M.glsl;~~/shaders/Anime4K_Upscale_Denoise_CNN_x2_S.glsl;~~/shaders/Anime4K_Upscale_Denoise_CNN_x2_UL.glsl;~~/shaders/Anime4K_Upscale_Denoise_CNN_x2_VL.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K_Upscale_Denoise_CNN (CNN降噪上采样) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/Anime4K_Upscale_Denoise_CNN_x2_L.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K_Upscale_Denoise_CNN (CNN降噪上采样) > L (2倍大尺寸CNN降噪上采样)
#                   change-list glsl-shaders toggle "~~/shaders/Anime4K_Upscale_Denoise_CNN_x2_M.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K_Upscale_Denoise_CNN (CNN降噪上采样) > M (2倍中尺寸CNN降噪上采样)
#                   change-list glsl-shaders toggle "~~/shaders/Anime4K_Upscale_Denoise_CNN_x2_S.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K_Upscale_Denoise_CNN (CNN降噪上采样) > S (2倍小尺寸CNN降噪上采样)
#                   change-list glsl-shaders toggle "~~/shaders/Anime4K_Upscale_Denoise_CNN_x2_UL.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K_Upscale_Denoise_CNN (CNN降噪上采样) > UL (2倍超大尺寸CNN降噪上采样)
#                   change-list glsl-shaders toggle "~~/shaders/Anime4K_Upscale_Denoise_CNN_x2_VL.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K_Upscale_Denoise_CNN (CNN降噪上采样) > VL (2倍超超大尺寸CNN降噪上采样)

#                   change-list glsl-shaders set "~~/shaders/Anime4K_Upscale_DoG_x2.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K_Upscale_DoG (差分高斯上采样) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/Anime4K_Upscale_DoG_x2.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K_Upscale_DoG (差分高斯上采样) > DoG x2 (2倍差分高斯上采样)

#                   change-list glsl-shaders set "~~/shaders/Anime4K_Upscale_DTD_x2.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K_Upscale_DTD (DTD上采样) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/Anime4K_Upscale_DTD_x2.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K_Upscale_DTD (DTD上采样) > DTD x2 (2倍DTD上采样)

#                   change-list glsl-shaders set "~~/shaders/Anime4K_Upscale_GAN_x2_M.glsl;~~/shaders/Anime4K_Upscale_GAN_x2_S.glsl;~~/shaders/Anime4K_Upscale_GAN_x3_L.glsl;~~/shaders/Anime4K_Upscale_GAN_x3_VL.glsl;~~/shaders/Anime4K_Upscale_GAN_x4_UL.glsl;~~/shaders/Anime4K_Upscale_GAN_x4_UUL.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K_Upscale_GAN (GAN上采样) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/Anime4K_Upscale_GAN_x2_M.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K_Upscale_GAN (GAN上采样) > X2 M (2倍中尺寸GAN上采样)
#                   change-list glsl-shaders toggle "~~/shaders/Anime4K_Upscale_GAN_x2_S.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K_Upscale_GAN (GAN上采样) > X2 S (2倍小尺寸GAN上采样)
#                   change-list glsl-shaders toggle "~~/shaders/Anime4K_Upscale_GAN_x3_L.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K_Upscale_GAN (GAN上采样) > X3 L (3倍大尺寸GAN上采样)
#                   change-list glsl-shaders toggle "~~/shaders/Anime4K_Upscale_GAN_x3_VL.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K_Upscale_GAN (GAN上采样) > X3 VL (3倍超超大尺寸GAN上采样)
#                   change-list glsl-shaders toggle "~~/shaders/Anime4K_Upscale_GAN_x4_UL.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K_Upscale_GAN (GAN上采样) > X4 UL (4倍超大尺寸GAN上采样)
#                   change-list glsl-shaders toggle "~~/shaders/Anime4K_Upscale_GAN_x4_UUL.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K_Upscale_GAN (GAN上采样) > X4 UUL (4倍超超大尺寸GAN上采样)

#                   change-list glsl-shaders set "~~/shaders/Anime4K_Upscale_Original_x2.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K_Upscale_Original (原始上采样) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/Anime4K_Upscale_Original_x2.glsl" #! 着色器 > 动漫/卡通优化 > Anime4K_Upscale_Original (原始上采样) > Original x2 (2倍原始上采样)

#                   change-list glsl-shaders set "~~/shaders/adaptive_sharpen_RT.glsl;~~/shaders/adaptive_sharpen_luma_RT.glsl" #! 着色器 > 降噪与锐化 > Adaptive Sharpen (自适应锐化) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/adaptive_sharpen_RT.glsl" #! 着色器 > 降噪与锐化 > Adaptive Sharpen (自适应锐化) > RT (实时自适应锐化)
#                   change-list glsl-shaders toggle "~~/shaders/adaptive_sharpen_luma_RT.glsl" #! 着色器 > 降噪与锐化 > Adaptive Sharpen (自适应锐化) > Luma RT (实时自适应亮度锐化)

#                   change-list glsl-shaders set "~~/shaders/AMD_CAS_RT.glsl;~~/shaders/AMD_CAS_rgb_RT.glsl;~~/shaders/AMD_CAS_scaled_RT.glsl;~~/shaders/AMD_CAS_scaled_rgb_RT.glsl" #! 着色器 > 降噪与锐化 > AMD_CAS (对比度自适应锐化) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/AMD_CAS_RT.glsl" #! 着色器 > 降噪与锐化 > AMD_CAS (对比度自适应锐化) > RT (实时对比度自适应锐化)
#                   change-list glsl-shaders toggle "~~/shaders/AMD_CAS_rgb_RT.glsl" #! 着色器 > 降噪与锐化 > AMD_CAS (对比度自适应锐化) > RGB RT (实时RGB对比度自适应锐化)
#                   change-list glsl-shaders toggle "~~/shaders/AMD_CAS_scaled_RT.glsl" #! 着色器 > 降噪与锐化 > AMD_CAS (对比度自适应锐化) > SCALED RT (缩放后实时对比度自适应锐化)
#                   change-list glsl-shaders toggle "~~/shaders/AMD_CAS_scaled_rgb_RT.glsl" #! 着色器 > 降噪与锐化 > AMD_CAS (对比度自适应锐化) > SCALED RGB RT (缩放后实时RGB对比度自适应锐化)

#                   change-list glsl-shaders set "~~/shaders/AMD_FSR_EASU_chroma_RT.glsl;~~/shaders/AMD_FSR_EASU_luma_RT.glsl;~~/shaders/AMD_FSR_EASU_rgb_RT.glsl;~~/shaders/AMD_FSR_RCAS_luma_RT.glsl;~~/shaders/AMD_FSR_RCAS_rgb_RT.glsl;~~/shaders/AMD_FSR_RT.glsl;~~/shaders/AMD_FSR_rgb_RT.glsl" #! 着色器 > 降噪与锐化 > AMD_FSR (FidelityFX超分辨率) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/AMD_FSR_EASU_chroma_RT.glsl" #! 着色器 > 降噪与锐化 > AMD_FSR (FidelityFX超分辨率) > EASU CHROMA RT (实时色度增强)
#                   change-list glsl-shaders toggle "~~/shaders/AMD_FSR_EASU_luma_RT.glsl" #! 着色器 > 降噪与锐化 > AMD_FSR (FidelityFX超分辨率) > EASU LUMA RT (实时亮度增强)
#                   change-list glsl-shaders toggle "~~/shaders/AMD_FSR_EASU_rgb_RT.glsl" #! 着色器 > 降噪与锐化 > AMD_FSR (FidelityFX超分辨率) > EASU RGB RT (实时RGB增强)
#                   change-list glsl-shaders toggle "~~/shaders/AMD_FSR_RCAS_luma_RT.glsl" #! 着色器 > 降噪与锐化 > AMD_FSR (FidelityFX超分辨率) > RCAS LUMA RT (实时亮度锐化)
#                   change-list glsl-shaders toggle "~~/shaders/AMD_FSR_RCAS_rgb_RT.glsl" #! 着色器 > 降噪与锐化 > AMD_FSR (FidelityFX超分辨率) > RCAS RGB RT (实时RGB锐化)
#                   change-list glsl-shaders toggle "~~/shaders/AMD_FSR_RT.glsl" #! 着色器 > 降噪与锐化 > AMD_FSR (FidelityFX超分辨率) > RT (实时FSR)
#                   change-list glsl-shaders toggle "~~/shaders/AMD_FSR_rgb_RT.glsl" #! 着色器 > 降噪与锐化 > AMD_FSR (FidelityFX超分辨率) > RGB RT (实时RGB FSR)

#                   change-list glsl-shaders set "~~/shaders/ArtCNN_C4F16.glsl;~~/shaders/ArtCNN_C4F16_DS.glsl;~~/shaders/ArtCNN_C4F32.glsl;~~/shaders/ArtCNN_C4F32_DS.glsl" #! 着色器 > 降噪与锐化 > ArtCNN (艺术风格CNN处理) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/ArtCNN_C4F16.glsl" #! 着色器 > 降噪与锐化 > ArtCNN (艺术风格CNN处理) > C4F16 (标准模式)
#                   change-list glsl-shaders toggle "~~/shaders/ArtCNN_C4F16_DS.glsl" #! 着色器 > 降噪与锐化 > ArtCNN (艺术风格CNN处理) > C4F16 DS (带下采样)
#                   change-list glsl-shaders toggle "~~/shaders/ArtCNN_C4F32.glsl" #! 着色器 > 降噪与锐化 > ArtCNN (艺术风格CNN处理) > C4F32 (更高质量)
#                   change-list glsl-shaders toggle "~~/shaders/ArtCNN_C4F32_DS.glsl" #! 着色器 > 降噪与锐化 > ArtCNN (艺术风格CNN处理) > C4F32 DS (更高质量带下采样)

#                   change-list glsl-shaders set "~~/shaders/ArtCNN_Legacy_C4F16_DS_YCbCr.glsl;~~/shaders/ArtCNN_Legacy_C4F16_RGB.glsl;~~/shaders/ArtCNN_Legacy_C4F16_YCbCr.glsl;~~/shaders/ArtCNN_Legacy_C4F32_Chroma.glsl;~~/shaders/ArtCNN_Legacy_C4F32_DS_YCbCr.glsl;~~/shaders/ArtCNN_Legacy_C4F32_RGB.glsl;~~/shaders/ArtCNN_Legacy_C4F32_YCbCr.glsl" #! 着色器 > 降噪与锐化 > ArtCNN Legacy (旧版算法) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/ArtCNN_Legacy_C4F16_DS_YCbCr.glsl" #! 着色器 > 降噪与锐化 > ArtCNN Legacy (旧版算法) > C4F16 DS YCBCR (旧版，YCbCr带下采样)
#                   change-list glsl-shaders toggle "~~/shaders/ArtCNN_Legacy_C4F16_RGB.glsl" #! 着色器 > 降噪与锐化 > ArtCNN Legacy (旧版算法) > C4F16 RGB (旧版，RGB模式)
#                   change-list glsl-shaders toggle "~~/shaders/ArtCNN_Legacy_C4F16_YCbCr.glsl" #! 着色器 > 降噪与锐化 > ArtCNN Legacy (旧版算法) > C4F16 YCBCR (旧版，YCbCr模式)
#                   change-list glsl-shaders toggle "~~/shaders/ArtCNN_Legacy_C4F32_Chroma.glsl" #! 着色器 > 降噪与锐化 > ArtCNN Legacy (旧版算法) > C4F32 CHROMA (旧版，色度增强)
#                   change-list glsl-shaders toggle "~~/shaders/ArtCNN_Legacy_C4F32_DS_YCbCr.glsl" #! 着色器 > 降噪与锐化 > ArtCNN Legacy (旧版算法) > C4F32 DS YCBCR (旧版，YCbCr带下采样)
#                   change-list glsl-shaders toggle "~~/shaders/ArtCNN_Legacy_C4F32_RGB.glsl" #! 着色器 > 降噪与锐化 > ArtCNN Legacy (旧版算法) > C4F32 RGB (旧版，RGB模式)
#                   change-list glsl-shaders toggle "~~/shaders/ArtCNN_Legacy_C4F32_YCbCr.glsl" #! 着色器 > 降噪与锐化 > ArtCNN Legacy (旧版算法) > C4F32 YCBCR (旧版，YCbCr模式)

#                   change-list glsl-shaders set "~~/shaders/ArtCNN_v0_C4F8.glsl;~~/shaders/ArtCNN_v0_C4F8_CMP.glsl;~~/shaders/ArtCNN_v0_C4F8_DS.glsl;~~/shaders/ArtCNN_v0_C4F8_DS_CMP.glsl" #! 着色器 > 降噪与锐化 > ArtCNN V0 (版本0) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/ArtCNN_v0_C4F8.glsl" #! 着色器 > 降噪与锐化 > ArtCNN V0 (版本0) > C4F8 (版本0标准模式)
#                   change-list glsl-shaders toggle "~~/shaders/ArtCNN_v0_C4F8_CMP.glsl" #! 着色器 > 降噪与锐化 > ArtCNN V0 (版本0) > C4F8 CMP (版本0带比较模式)
#                   change-list glsl-shaders toggle "~~/shaders/ArtCNN_v0_C4F8_DS.glsl" #! 着色器 > 降噪与锐化 > ArtCNN V0 (版本0) > C4F8 DS (版本0带下采样)
#                   change-list glsl-shaders toggle "~~/shaders/ArtCNN_v0_C4F8_DS_CMP.glsl" #! 着色器 > 降噪与锐化 > ArtCNN V0 (版本0) > C4F8 DS CMP (版本0带下采样和比较模式)

#                   change-list glsl-shaders set "~~/shaders/CfL_Prediction_Lite.glsl;~~/shaders/CfL_Prediction_RT.glsl" #! 着色器 > 降噪与锐化 > CfL Prediction (颜色预测) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/CfL_Prediction_Lite.glsl" #! 着色器 > 降噪与锐化 > CfL Prediction (颜色预测) > Lite (轻量级颜色预测)
#                   change-list glsl-shaders toggle "~~/shaders/CfL_Prediction_RT.glsl" #! 着色器 > 降噪与锐化 > CfL Prediction (颜色预测) > RT (实时颜色预测)

#                   change-list glsl-shaders set "~~/shaders/CuNNy_2x12_DS.glsl;~~/shaders/CuNNy_2x12_DS_vk.glsl;~~/shaders/CuNNy_2x12_SOFT.glsl;~~/shaders/CuNNy_2x12_SOFT_vk.glsl;~~/shaders/CuNNy_3x12_DS.glsl;~~/shaders/CuNNy_3x12_DS_vk.glsl;~~/shaders/CuNNy_3x12_SOFT.glsl;~~/shaders/CuNNy_3x12_SOFT_vk.glsl;~~/shaders/CuNNy_4x12_DS.glsl;~~/shaders/CuNNy_4x12_DS_vk.glsl;~~/shaders/CuNNy_4x12_SOFT.glsl;~~/shaders/CuNNy_4x12_SOFT_vk.glsl;~~/shaders/CuNNy_4x16_DS.glsl;~~/shaders/CuNNy_4x16_DS_vk.glsl;~~/shaders/CuNNy_4x16_SOFT.glsl;~~/shaders/CuNNy_4x16_SOFT_vk.glsl;~~/shaders/CuNNy_4x24_DS.glsl;~~/shaders/CuNNy_4x24_DS_vk.glsl;~~/shaders/CuNNy_4x24_SOFT.glsl;~~/shaders/CuNNy_4x24_SOFT_vk.glsl;~~/shaders/CuNNy_4x32_DS.glsl;~~/shaders/CuNNy_4x32_DS_vk.glsl;~~/shaders/CuNNy_4x32_SOFT.glsl;~~/shaders/CuNNy_4x32_SOFT_vk.glsl;~~/shaders/CuNNy_8x32_DS.glsl;~~/shaders/CuNNy_8x32_DS_vk.glsl;~~/shaders/CuNNy_fast_DS.glsl;~~/shaders/CuNNy_fast_SOFT.glsl;~~/shaders/CuNNy_fast_SOFT_vk.glsl;~~/shaders/CuNNy_faster_DS.glsl;~~/shaders/CuNNy_faster_SOFT.glsl;~~/shaders/CuNNy_faster_SOFT_vk.glsl;~~/shaders/CuNNy_veryfast_SOFT.glsl;~~/shaders/CuNNy_veryfast_SOFT_vk.glsl" #! 着色器 > 降噪与锐化 > CuNNy (基于CNN的降噪和锐化) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/CuNNy_2x12_DS.glsl" #! 着色器 > 降噪与锐化 > CuNNy (基于CNN的降噪和锐化) > 2x12 DS (2层12通道带下采样)
#                   change-list glsl-shaders toggle "~~/shaders/CuNNy_2x12_DS_vk.glsl" #! 着色器 > 降噪与锐化 > CuNNy (基于CNN的降噪和锐化) > 2x12 DS VK (2层12通道带下采样，Vulkan优化)
#                   change-list glsl-shaders toggle "~~/shaders/CuNNy_2x12_SOFT.glsl" #! 着色器 > 降噪与锐化 > CuNNy (基于CNN的降噪和锐化) > 2x12 SOFT (2层12通道柔和模式)
#                   change-list glsl-shaders toggle "~~/shaders/CuNNy_2x12_SOFT_vk.glsl" #! 着色器 > 降噪与锐化 > CuNNy (基于CNN的降噪和锐化) > 2x12 SOFT VK (2层12通道柔和模式，Vulkan优化)
#                   change-list glsl-shaders toggle "~~/shaders/CuNNy_3x12_DS.glsl" #! 着色器 > 降噪与锐化 > CuNNy (基于CNN的降噪和锐化) > 3x12 DS (3层12通道带下采样)
#                   change-list glsl-shaders toggle "~~/shaders/CuNNy_3x12_DS_vk.glsl" #! 着色器 > 降噪与锐化 > CuNNy (基于CNN的降噪和锐化) > 3x12 DS VK (3层12通道带下采样，Vulkan优化)
#                   change-list glsl-shaders toggle "~~/shaders/CuNNy_3x12_SOFT.glsl" #! 着色器 > 降噪与锐化 > CuNNy (基于CNN的降噪和锐化) > 3x12 SOFT (3层12通道柔和模式)
#                   change-list glsl-shaders toggle "~~/shaders/CuNNy_3x12_SOFT_vk.glsl" #! 着色器 > 降噪与锐化 > CuNNy (基于CNN的降噪和锐化) > 3x12 SOFT VK (3层12通道柔和模式，Vulkan优化)
#                   change-list glsl-shaders toggle "~~/shaders/CuNNy_4x12_DS.glsl" #! 着色器 > 降噪与锐化 > CuNNy (基于CNN的降噪和锐化) > 4x12 DS (4层12通道带下采样)
#                   change-list glsl-shaders toggle "~~/shaders/CuNNy_4x12_DS_vk.glsl" #! 着色器 > 降噪与锐化 > CuNNy (基于CNN的降噪和锐化) > 4x12 DS VK (4层12通道带下采样，Vulkan优化)
#                   change-list glsl-shaders toggle "~~/shaders/CuNNy_4x12_SOFT.glsl" #! 着色器 > 降噪与锐化 > CuNNy (基于CNN的降噪和锐化) > 4x12 SOFT (4层12通道柔和模式)
#                   change-list glsl-shaders toggle "~~/shaders/CuNNy_4x12_SOFT_vk.glsl" #! 着色器 > 降噪与锐化 > CuNNy (基于CNN的降噪和锐化) > 4x12 SOFT VK (4层12通道柔和模式，Vulkan优化)
#                   change-list glsl-shaders toggle "~~/shaders/CuNNy_4x16_DS.glsl" #! 着色器 > 降噪与锐化 > CuNNy (基于CNN的降噪和锐化) > 4x16 DS (4层16通道带下采样)
#                   change-list glsl-shaders toggle "~~/shaders/CuNNy_4x16_DS_vk.glsl" #! 着色器 > 降噪与锐化 > CuNNy (基于CNN的降噪和锐化) > 4x16 DS VK (4层16通道带下采样，Vulkan优化)
#                   change-list glsl-shaders toggle "~~/shaders/CuNNy_4x16_SOFT.glsl" #! 着色器 > 降噪与锐化 > CuNNy (基于CNN的降噪和锐化) > 4x16 SOFT (4层16通道柔和模式)
#                   change-list glsl-shaders toggle "~~/shaders/CuNNy_4x16_SOFT_vk.glsl" #! 着色器 > 降噪与锐化 > CuNNy (基于CNN的降噪和锐化) > 4x16 SOFT VK (4层16通道柔和模式，Vulkan优化)
#                   change-list glsl-shaders toggle "~~/shaders/CuNNy_4x24_DS.glsl" #! 着色器 > 降噪与锐化 > CuNNy (基于CNN的降噪和锐化) > 4x24 DS (4层24通道带下采样)
#                   change-list glsl-shaders toggle "~~/shaders/CuNNy_4x24_DS_vk.glsl" #! 着色器 > 降噪与锐化 > CuNNy (基于CNN的降噪和锐化) > 4x24 DS VK (4层24通道带下采样，Vulkan优化)
#                   change-list glsl-shaders toggle "~~/shaders/CuNNy_4x24_SOFT.glsl" #! 着色器 > 降噪与锐化 > CuNNy (基于CNN的降噪和锐化) > 4x24 SOFT (4层24通道柔和模式)
#                   change-list glsl-shaders toggle "~~/shaders/CuNNy_4x24_SOFT_vk.glsl" #! 着色器 > 降噪与锐化 > CuNNy (基于CNN的降噪和锐化) > 4x24 SOFT VK (4层24通道柔和模式，Vulkan优化)
#                   change-list glsl-shaders toggle "~~/shaders/CuNNy_4x32_DS.glsl" #! 着色器 > 降噪与锐化 > CuNNy (基于CNN的降噪和锐化) > 4x32 DS (4层32通道带下采样)
#                   change-list glsl-shaders toggle "~~/shaders/CuNNy_4x32_DS_vk.glsl" #! 着色器 > 降噪与锐化 > CuNNy (基于CNN的降噪和锐化) > 4x32 DS VK (4层32通道带下采样，Vulkan优化)
#                   change-list glsl-shaders toggle "~~/shaders/CuNNy_4x32_SOFT.glsl" #! 着色器 > 降噪与锐化 > CuNNy (基于CNN的降噪和锐化) > 4x32 SOFT (4层32通道柔和模式)
#                   change-list glsl-shaders toggle "~~/shaders/CuNNy_4x32_SOFT_vk.glsl" #! 着色器 > 降噪与锐化 > CuNNy (基于CNN的降噪和锐化) > 4x32 SOFT VK (4层32通道柔和模式，Vulkan优化)
#                   change-list glsl-shaders toggle "~~/shaders/CuNNy_8x32_DS.glsl" #! 着色器 > 降噪与锐化 > CuNNy (基于CNN的降噪和锐化) > 8x32 DS (8层32通道带下采样)
#                   change-list glsl-shaders toggle "~~/shaders/CuNNy_8x32_DS_vk.glsl" #! 着色器 > 降噪与锐化 > CuNNy (基于CNN的降噪和锐化) > 8x32 DS VK (8层32通道带下采样，Vulkan优化)
#                   change-list glsl-shaders toggle "~~/shaders/CuNNy_fast_DS.glsl" #! 着色器 > 降噪与锐化 > CuNNy (基于CNN的降噪和锐化) > FAST DS (快速带下采样)
#                   change-list glsl-shaders toggle "~~/shaders/CuNNy_fast_SOFT.glsl" #! 着色器 > 降噪与锐化 > CuNNy (基于CNN的降噪和锐化) > FAST SOFT (快速柔和模式)
#                   change-list glsl-shaders toggle "~~/shaders/CuNNy_fast_SOFT_vk.glsl" #! 着色器 > 降噪与锐化 > CuNNy (基于CNN的降噪和锐化) > FAST SOFT VK (快速柔和模式，Vulkan优化)
#                   change-list glsl-shaders toggle "~~/shaders/CuNNy_faster_DS.glsl" #! 着色器 > 降噪与锐化 > CuNNy (基于CNN的降噪和锐化) > FASTER DS (更快带下采样)
#                   change-list glsl-shaders toggle "~~/shaders/CuNNy_faster_SOFT.glsl" #! 着色器 > 降噪与锐化 > CuNNy (基于CNN的降噪和锐化) > FASTER SOFT (更快柔和模式)
#                   change-list glsl-shaders toggle "~~/shaders/CuNNy_faster_SOFT_vk.glsl" #! 着色器 > 降噪与锐化 > CuNNy (基于CNN的降噪和锐化) > FASTER SOFT VK (更快柔和模式，Vulkan优化)
#                   change-list glsl-shaders toggle "~~/shaders/CuNNy_veryfast_SOFT.glsl" #! 着色器 > 降噪与锐化 > CuNNy (基于CNN的降噪和锐化) > VERYFAST SOFT (超快速柔和模式)
#                   change-list glsl-shaders toggle "~~/shaders/CuNNy_veryfast_SOFT_vk.glsl" #! 着色器 > 降噪与锐化 > CuNNy (基于CNN的降噪和锐化) > VERYFAST SOFT VK (超快速柔和模式，Vulkan优化)

#                   change-list glsl-shaders set "~~/shaders/deband_exFast_RT.glsl" #! 着色器 > 降噪与锐化 > Deband ExFast RT (超快速实时去色带) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/deband_exFast_RT.glsl" #! 着色器 > 降噪与锐化 > Deband ExFast RT (超快速实时去色带) > RT (超快速实时去色带)

#                   change-list glsl-shaders set "~~/shaders/hdeband.glsl" #! 着色器 > 降噪与锐化 > Hdeband (高级去色带) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/hdeband.glsl" #! 着色器 > 降噪与锐化 > Hdeband (高级去色带) > Hdeband (高级去色带算法)

#                   change-list glsl-shaders set "~~/shaders/LumaSharpen.glsl;~~/shaders/LumaSharpen_RT.glsl" #! 着色器 > 降噪与锐化 > LumaSharpen (亮度锐化) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/LumaSharpen.glsl" #! 着色器 > 降噪与锐化 > LumaSharpen (亮度锐化) > Standard (标准亮度锐化)
#                   change-list glsl-shaders toggle "~~/shaders/LumaSharpen_RT.glsl" #! 着色器 > 降噪与锐化 > LumaSharpen (亮度锐化) > RT (实时亮度锐化)

#                   change-list glsl-shaders set "~~/shaders/minblur_usm.glsl" #! 着色器 > 降噪与锐化 > Minblur Usm (最小模糊USM锐化) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/minblur_usm.glsl" #! 着色器 > 降噪与锐化 > Minblur Usm (最小模糊USM锐化) > USM (最小模糊非锐化掩膜)

#                   change-list glsl-shaders set "~~/shaders/NLS_RT.glsl" #! 着色器 > 降噪与锐化 > NLS RT (实时非局部均值) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/NLS_RT.glsl" #! 着色器 > 降噪与锐化 > NLS RT (实时非局部均值) > RT (实时非局部均值滤波)

#                   change-list glsl-shaders set "~~/shaders/nlmeans.glsl;~~/shaders/nlmeans_dx.glsl;~~/shaders/nlmeans_lq.glsl;~~/shaders/nlmeans_lq_dx.glsl;~~/shaders/nlmeans_temporal.glsl;~~/shaders/nlmeans_temporal_dx.glsl" #! 着色器 > 降噪与锐化 > Nlmeans (非局部均值降噪) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/nlmeans.glsl" #! 着色器 > 降噪与锐化 > Nlmeans (非局部均值降噪) > Standard (标准非局部均值降噪)
#                   change-list glsl-shaders toggle "~~/shaders/nlmeans_dx.glsl" #! 着色器 > 降噪与锐化 > Nlmeans (非局部均值降噪) > DX (DirectX优化非局部均值降噪)
#                   change-list glsl-shaders toggle "~~/shaders/nlmeans_lq.glsl" #! 着色器 > 降噪与锐化 > Nlmeans (非局部均值降噪) > LQ (低质量非局部均值降噪)
#                   change-list glsl-shaders toggle "~~/shaders/nlmeans_lq_dx.glsl" #! 着色器 > 降噪与锐化 > Nlmeans (非局部均值降噪) > LQ DX (低质量DirectX优化非局部均值降噪)
#                   change-list glsl-shaders toggle "~~/shaders/nlmeans_temporal.glsl" #! 着色器 > 降噪与锐化 > Nlmeans (非局部均值降噪) > TEMPORAL (时域非局部均值降噪)
#                   change-list glsl-shaders toggle "~~/shaders/nlmeans_temporal_dx.glsl" #! 着色器 > 降噪与锐化 > Nlmeans (非局部均值降噪) > TEMPORAL DX (时域DirectX优化非局部均值降噪)

#                   change-list glsl-shaders set "~~/shaders/NVScaler_RT.glsl;~~/shaders/NVScaler_rgb_RT.glsl;~~/shaders/NVSharpen_RT.glsl;~~/shaders/NVSharpen_rgb_RT.glsl" #! 着色器 > 降噪与锐化 > NVIDIA系列 (NVIDIA显卡优化技术) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/NVScaler_RT.glsl" #! 着色器 > 降噪与锐化 > NVIDIA系列 (NVIDIA显卡优化技术) > 缩放 > 标准 (NVIDIA优化缩放算法)
#                   change-list glsl-shaders toggle "~~/shaders/NVScaler_rgb_RT.glsl" #! 着色器 > 降噪与锐化 > NVIDIA系列 (NVIDIA显卡优化技术) > 缩放 > RGB (RGB模式缩放)
#                   change-list glsl-shaders toggle "~~/shaders/NVSharpen_RT.glsl" #! 着色器 > 降噪与锐化 > NVIDIA系列 (NVIDIA显卡优化技术) > 锐化 > 标准 (NVIDIA优化锐化算法)
#                   change-list glsl-shaders toggle "~~/shaders/NVSharpen_rgb_RT.glsl" #! 着色器 > 降噪与锐化 > NVIDIA系列 (NVIDIA显卡优化技术) > 锐化 > RGB (RGB模式锐化)

#                   change-list glsl-shaders set "~~/shaders/PixelClipper_RT.glsl" #! 着色器 > 降噪与锐化 > PixelClipper RT (实时像素裁剪) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/PixelClipper_RT.glsl" #! 着色器 > 降噪与锐化 > PixelClipper RT (实时像素裁剪) > RT (实时像素裁剪)

#                   change-list glsl-shaders set "~~/shaders/SSimDownscaler_RT.glsl;~~/shaders/SSimSuperRes_RT.glsl" #! 着色器 > 降噪与锐化 > SSim (结构相似性算法) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/SSimDownscaler_RT.glsl" #! 着色器 > 降噪与锐化 > SSim (结构相似性算法) > 缩小 (保留结构相似性的缩小算法)
#                   change-list glsl-shaders toggle "~~/shaders/SSimSuperRes_RT.glsl" #! 着色器 > 降噪与锐化 > SSim (结构相似性算法) > 放大 (保留结构相似性的放大算法)

#                   change-list glsl-shaders set "~~/shaders/superxbr.glsl;~~/shaders/superxbr_rgb.glsl;~~/shaders/superxbr_yuv.glsl" #! 着色器 > 降噪与锐化 > Superxbr (高质量边缘平滑) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/superxbr.glsl" #! 着色器 > 降噪与锐化 > Superxbr (高质量边缘平滑) > STANDARD (标准边缘平滑)
#                   change-list glsl-shaders toggle "~~/shaders/superxbr_rgb.glsl" #! 着色器 > 降噪与锐化 > Superxbr (高质量边缘平滑) > RGB (RGB模式边缘平滑)
#                   change-list glsl-shaders toggle "~~/shaders/superxbr_yuv.glsl" #! 着色器 > 降噪与锐化 > Superxbr (高质量边缘平滑) > YUV (YUV模式边缘平滑)

#                   change-list glsl-shaders set "~~/shaders/unsharp_RT.glsl;~~/shaders/unsharpMask_RT.glsl" #! 着色器 > 降噪与锐化 > Unsharp (非锐化滤镜) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/unsharp_RT.glsl" #! 着色器 > 降噪与锐化 > Unsharp (非锐化滤镜) > RT (实时非锐化)
#                   change-list glsl-shaders toggle "~~/shaders/unsharpMask_RT.glsl" #! 着色器 > 降噪与锐化 > Unsharp (非锐化滤镜) > MASK RT (实时非锐化掩膜)

#                   change-list glsl-shaders set "~~/shaders/unsharp_masking_RT.glsl" #! 着色器 > 降噪与锐化 > Unsharp Masking RT (实时非锐化掩膜) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/unsharp_masking_RT.glsl" #! 着色器 > 降噪与锐化 > Unsharp Masking RT (实时非锐化掩膜) > RT (实时非锐化掩膜)

#                   change-list glsl-shaders set "~~/shaders/color_alt_luma.glsl;~~/shaders/color_alt_rgb.glsl" #! 着色器 > 色彩与图像调整 > Color Alt (颜色交替) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/color_alt_luma.glsl" #! 着色器 > 色彩与图像调整 > Color Alt (颜色交替) > Luma (亮度颜色交替)
#                   change-list glsl-shaders toggle "~~/shaders/color_alt_rgb.glsl" #! 着色器 > 色彩与图像调整 > Color Alt (颜色交替) > Rgb (RGB颜色交替)

#                   change-list glsl-shaders set "~~/shaders/colorlevel_expand.glsl;~~/shaders/colorlevel_expand_chroma.glsl;~~/shaders/colorlevel_expand_luma.glsl" #! 着色器 > 色彩与图像调整 > Colorlevel Expand (色彩范围扩展) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/colorlevel_expand.glsl" #! 着色器 > 色彩与图像调整 > Colorlevel Expand (色彩范围扩展) > Expand (标准扩展)
#                   change-list glsl-shaders toggle "~~/shaders/colorlevel_expand_chroma.glsl" #! 着色器 > 色彩与图像调整 > Colorlevel Expand (色彩范围扩展) > Expand Chroma (色度扩展)
#                   change-list glsl-shaders toggle "~~/shaders/colorlevel_expand_luma.glsl" #! 着色器 > 色彩与图像调整 > Colorlevel Expand (色彩范围扩展) > Expand Luma (亮度扩展)

#                   change-list glsl-shaders set "~~/shaders/colorlevel_shrink.glsl;~~/shaders/colorlevel_shrink_chroma.glsl;~~/shaders/colorlevel_shrink_luma.glsl" #! 着色器 > 色彩与图像调整 > Colorlevel Shrink (色彩范围收缩) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/colorlevel_shrink.glsl" #! 着色器 > 色彩与图像调整 > Colorlevel Shrink (色彩范围收缩) > Shrink (标准收缩)
#                   change-list glsl-shaders toggle "~~/shaders/colorlevel_shrink_chroma.glsl" #! 着色器 > 色彩与图像调整 > Colorlevel Shrink (色彩范围收缩) > Shrink Chroma (色度收缩)
#                   change-list glsl-shaders toggle "~~/shaders/colorlevel_shrink_luma.glsl" #! 着色器 > 色彩与图像调整 > Colorlevel Shrink (色彩范围收缩) > Shrink Luma (亮度收缩)

#                   change-list glsl-shaders set "~~/shaders/colorprim_601_to_709.glsl" #! 着色器 > 色彩与图像调整 > Colorprim 601 To 709 (色彩原色转换) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/colorprim_601_to_709.glsl" #! 着色器 > 色彩与图像调整 > Colorprim 601 To 709 (色彩原色转换) > 601 to 709 (色彩空间从Rec.601转换为Rec.709)

#                   change-list glsl-shaders set "~~/shaders/eq_rgb_RT.glsl" #! 着色器 > 色彩与图像调整 > Eq Rgb RT (实时RGB均衡) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/eq_rgb_RT.glsl" #! 着色器 > 色彩与图像调整 > Eq Rgb RT (实时RGB均衡) > RT (实时RGB均衡)

#                   change-list glsl-shaders set "~~/shaders/eq_yiq_RT.glsl" #! 着色器 > 色彩与图像调整 > Eq Yiq RT (实时YIQ均衡) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/eq_yiq_RT.glsl" #! 着色器 > 色彩与图像调整 > Eq Yiq RT (实时YIQ均衡) > RT (实时YIQ均衡)

#                   change-list glsl-shaders set "~~/shaders/fake_hdr.glsl" #! 着色器 > 色彩与图像调整 > Fake Hdr (伪HDR效果) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/fake_hdr.glsl" #! 着色器 > 色彩与图像调整 > Fake Hdr (伪HDR效果) > Fake HDR (伪HDR效果)

#                   change-list glsl-shaders set "~~/shaders/fast_gaussian_RT.glsl" #! 着色器 > 色彩与图像调整 > Fast Gaussian RT (快速实时高斯模糊) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/fast_gaussian_RT.glsl" #! 着色器 > 色彩与图像调整 > Fast Gaussian RT (快速实时高斯模糊) > RT (快速实时高斯模糊)

#                   change-list glsl-shaders set "~~/shaders/FastBilateral_RT.glsl" #! 着色器 > 色彩与图像调整 > FastBilateral RT (实时快速双边滤波) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/FastBilateral_RT.glsl" #! 着色器 > 色彩与图像调整 > FastBilateral RT (实时快速双边滤波) > RT (实时快速双边滤波)

#                   change-list glsl-shaders set "~~/shaders/faux_hdr.glsl;~~/shaders/faux_hdr_RT.glsl" #! 着色器 > 色彩与图像调整 > Faux Hdr (模拟HDR效果) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/faux_hdr.glsl" #! 着色器 > 色彩与图像调整 > Faux Hdr (模拟HDR效果) > Faux HDR (模拟HDR效果)
#                   change-list glsl-shaders toggle "~~/shaders/faux_hdr_RT.glsl" #! 着色器 > 色彩与图像调整 > Faux Hdr (模拟HDR效果) > Faux HDR RT (实时模拟HDR效果)

#                   change-list glsl-shaders set "~~/shaders/flip_h.glsl;~~/shaders/flip_RT.glsl;~~/shaders/flip_v.glsl" #! 着色器 > 色彩与图像调整 > Flip (图像翻转) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/flip_h.glsl" #! 着色器 > 色彩与图像调整 > Flip (图像翻转) > Horizontal (水平翻转)
#                   change-list glsl-shaders toggle "~~/shaders/flip_RT.glsl" #! 着色器 > 色彩与图像调整 > Flip (图像翻转) > RT (实时翻转)
#                   change-list glsl-shaders toggle "~~/shaders/flip_v.glsl" #! 着色器 > 色彩与图像调整 > Flip (图像翻转) > Vertical (垂直翻转)

#                   change-list glsl-shaders set "~~/shaders/gaussianBlur_RT.glsl" #! 着色器 > 色彩与图像调整 > GaussianBlur RT (实时高斯模糊) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/gaussianBlur_RT.glsl" #! 着色器 > 色彩与图像调整 > GaussianBlur RT (实时高斯模糊) > RT (实时高斯模糊)

#                   change-list glsl-shaders set "~~/shaders/gray_chroma.glsl;~~/shaders/gray_rgb_2020.glsl;~~/shaders/gray_rgb_601.glsl;~~/shaders/gray_rgb_709.glsl;~~/shaders/gray_rgb_dp3.glsl;~~/shaders/gray_rgb_RT.glsl" #! 着色器 > 色彩与图像调整 > Gray (灰度转换) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/gray_chroma.glsl" #! 着色器 > 色彩与图像调整 > Gray (灰度转换) > CHROMA (色度灰度化)
#                   change-list glsl-shaders toggle "~~/shaders/gray_rgb_2020.glsl" #! 着色器 > 色彩与图像调整 > Gray (灰度转换) > RGB 2020 (基于Rec.2020的RGB灰度化)
#                   change-list glsl-shaders toggle "~~/shaders/gray_rgb_601.glsl" #! 着色器 > 色彩与图像调整 > Gray (灰度转换) > RGB 601 (基于Rec.601的RGB灰度化)
#                   change-list glsl-shaders toggle "~~/shaders/gray_rgb_709.glsl" #! 着色器 > 色彩与图像调整 > Gray (灰度转换) > RGB 709 (基于Rec.709的RGB灰度化)
#                   change-list glsl-shaders toggle "~~/shaders/gray_rgb_dp3.glsl" #! 着色器 > 色彩与图像调整 > Gray (灰度转换) > RGB DP3 (基于DP3的RGB灰度化)
#                   change-list glsl-shaders toggle "~~/shaders/gray_rgb_RT.glsl" #! 着色器 > 色彩与图像调整 > Gray (灰度转换) > RGB RT (实时RGB灰度化)

#                   change-list glsl-shaders set "~~/shaders/guided.glsl;~~/shaders/guided_fast.glsl;~~/shaders/guided_s.glsl" #! 着色器 > 色彩与图像调整 > Guided (引导滤波) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/guided.glsl" #! 着色器 > 色彩与图像调整 > Guided (引导滤波) > Standard (标准引导滤波)
#                   change-list glsl-shaders toggle "~~/shaders/guided_fast.glsl" #! 着色器 > 色彩与图像调整 > Guided (引导滤波) > Fast (快速引导滤波)
#                   change-list glsl-shaders toggle "~~/shaders/guided_s.glsl" #! 着色器 > 色彩与图像调整 > Guided (引导滤波) > S (小尺寸引导滤波)

#                   change-list glsl-shaders set "~~/shaders/JointBilateral_RT.glsl" #! 着色器 > 色彩与图像调整 > JointBilateral RT (实时联合双边滤波) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/JointBilateral_RT.glsl" #! 着色器 > 色彩与图像调整 > JointBilateral RT (实时联合双边滤波) > RT (实时联合双边滤波)

#                   change-list glsl-shaders set "~~/shaders/KrigBilateral.glsl" #! 着色器 > 色彩与图像调整 > KrigBilateral (克里金双边滤波) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/KrigBilateral.glsl" #! 着色器 > 色彩与图像调整 > KrigBilateral (克里金双边滤波) > KrigBilateral (克里金双边滤波算法)

#                   change-list glsl-shaders set "~~/shaders/noise_static_chroma.glsl;~~/shaders/shaders/noise_static_luma.glsl" #! 着色器 > 色彩与图像调整 > Noise Static (静态噪声) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/noise_static_chroma.glsl" #! 着色器 > 色彩与图像调整 > Noise Static (静态噪声) > Chroma (色度静态噪声)
#                   change-list glsl-shaders toggle "~~/shaders/noise_static_luma.glsl" #! 着色器 > 色彩与图像调整 > Noise Static (静态噪声) > Luma (亮度静态噪声)

#                   change-list glsl-shaders set "~~/shaders/plane_block_RT.glsl" #! 着色器 > 色彩与图像调整 > Plane Block RT (实时平面块处理) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/plane_block_RT.glsl" #! 着色器 > 色彩与图像调整 > Plane Block RT (实时平面块处理) > RT (实时平面块处理)

#                   change-list glsl-shaders set "~~/shaders/rotate_180.glsl" #! 着色器 > 色彩与图像调整 > Rotate 180 (旋转180度) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/rotate_180.glsl" #! 着色器 > 色彩与图像调整 > Rotate 180 (旋转180度) > Rotate 180 (图像旋转180度)

#                   change-list glsl-shaders set "~~/shaders/saturate.glsl" #! 着色器 > 色彩与图像调整 > Saturate (饱和度调整) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/saturate.glsl" #! 着色器 > 色彩与图像调整 > Saturate (饱和度调整) > Saturate (调整图像饱和度)

#                   change-list glsl-shaders set "~~/shaders/TsubaUP.glsl" #! 着色器 > 色彩与图像调整 > TsubaUP (图像放大和增强) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/TsubaUP.glsl" #! 着色器 > 色彩与图像调整 > TsubaUP (图像放大和增强) > TsubaUP (图像放大和增强算法)

#                   change-list glsl-shaders set "~~/shaders/YIQ_converter.glsl" #! 着色器 > 色彩与图像调整 > Yiq Converter (YIQ色彩空间转换) > 全部开启
#                   change-list glsl-shaders toggle "~~/shaders/YIQ_converter.glsl" #! 着色器 > 色彩与图像调整 > Yiq Converter (YIQ色彩空间转换) > Converter (YIQ色彩空间转换)




 Ctrl+s            script-binding uosc/shot                              #! ※ 截屏

h                  cycle-values hwdec "auto" "auto-copy" "no" "nvdec-copy"  #! 视频 > 切换 解码模式
#                  cycle deband                                          #! 视频 > 切换 去色带状态
#                  cycle deinterlace                                     #! 视频 > 切换 去隔行状态
#                  cycle icc-profile-auto                                #! 视频 > 切换 自动校色
#                  cycle correct-pts                                     #! 视频 > 切换 时间码解析模式
 1                 add contrast -1                                       #! 视频 > 均衡器 > 对比度 -
 2                 add contrast  1                                       #! 视频 > 均衡器 > 对比度 +
 3                 add brightness -1                                     #! 视频 > 均衡器 > 亮度/明度 -
 4                 add brightness  1                                     #! 视频 > 均衡器 > 亮度/明度 +
 5                 add gamma -1                                          #! 视频 > 均衡器 > 伽马 -
 6                 add gamma  1                                          #! 视频 > 均衡器 > 伽马 +
 7                 add saturation -1                                     #! 视频 > 均衡器 > 饱和度/纯度 -
 8                 add saturation  1                                     #! 视频 > 均衡器 > 饱和度/纯度 +
 9                 add hue -1                                            #! 视频 > 均衡器 > 色相 -
 0                 add hue  1                                            #! 视频 > 均衡器 > 色相 +
#                  ignore                                                #! 视频 > 均衡器 > ---
 Ctrl+BS           set contrast 0 ; set brightness 0 ; set gamma 0 ; set saturation 0 ; set hue 0 #! 视频 > 均衡器 > 重置 全部

Ctrl+i             script-binding uosc/keybinds                          #! 工具 > ※ 按键绑定列表
tab                script-binding display-stats-toggle                   #! 工具 > 常驻显示统计信息
`                  script-binding console/enable                         #! 工具 > 显示控制台
Ctrl+r             script-message-to save_global_props clean_data        #! 工具 > 清除已记录的属性值
b                  cycle border                                          #! 工具 > 切换 窗口边框
t                  cycle ontop                                           #! 工具 > 切换 窗口置顶
#                  script-binding uosc/audio-device                      #! 工具 > ※ 音频输出设备列表
#                  script-binding uosc/stream-quality                    #! 工具 > ※ 流式传输品质
#                  script-binding uosc/show-in-directory                 #! 工具 > ※ 打开 当前文件所在路径
#                  script-binding uosc/open-config-directory             #! 工具 > ※ 打开 设置目录
 Ctrl+p            script-binding input_plus/pip_dummy                   #! 工具 > 画中画（伪）/小窗化
#                  ignore                                                #! ---
 W                 quit-watch-later             # 关闭MPV程序 稍后观看（保存当前文件状态）
 Ctrl+w            quit                                                  #! 退出mpv


### ====================== 不映射菜单 ======================

 POWER             quit
 PLAY              set pause no
 PAUSE             set pause yes
 PLAYPAUSE         cycle pause
 STOP              stop
 REWIND            seek -30 ; script-message-to uosc flash-elements timeline
 FORWARD           seek  30 ; script-message-to uosc flash-elements timeline
 PREV              script-binding uosc/prev
 NEXT              script-binding uosc/next

 MBTN_BACK         script-binding uosc/prev
 MBTN_FORWARD      script-binding uosc/next
 MBTN_LEFT         ignore
 MBTN_LEFT_DBL     cycle fullscreen
 MBTN_MID          script-binding uosc/menu
 MBTN_RIGHT        script-binding uosc/menu
 Ctrl+MBTN_RIGHT   context-menu
 MBTN_RIGHT_DBL    ignore

#WHEEL_DOWN        no-osd add volume -1 ; script-message-to uosc flash-elements volume
#WHEEL_UP          no-osd add volume  1 ; script-message-to uosc flash-elements volume

 ESC               set fullscreen no
 ENTER             set fullscreen yes
 f                 cycle fullscreen
 SPACE             cycle pause
 UP                set pause yes ; seek -1 exact ; script-message-to uosc flash-elements timeline
 DOWN              set pause yes ; seek  1 exact ; script-message-to uosc flash-elements timeline
 LEFT              seek -5 ; script-message-to uosc flash-elements timeline
 RIGHT             seek  5 ; script-message-to uosc flash-elements timeline
 Ctrl+UP           script-binding uosc/prev
 Ctrl+DOWN         script-binding uosc/next